{"id": "000001", "instruction": "Please implement a website for generating stock reports to provide stock information and analysis. The website should have the functionality to search and summarize stock information, and generate customized stock reports based on user requirements. Users should be able to input stock codes or names, select report formats and content, and the website will automatically generate the corresponding reports. The reports should include basic stock information, market trends, financial data, and more. Set the background color to white and the component color to navy.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "Data Visualization"]}, "application_type": "Analytics Platforms/Dashboards", "ui_instruct": [{"task": "Verify the stock search functionality by entering a valid stock code.", "expected_result": "The system returns relevant stock information and analysis corresponding to the entered stock code, displaying details such as basic stock information, market trends, and financial data.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Test the report customization feature by selecting different report formats and content options.", "expected_result": "The system provides options for various report formats and content customization, enabling users to choose according to their preferences.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Input a stock name instead of a stock code to search for stock information.", "expected_result": "The website successfully recognizes the stock name, retrieving and displaying the relevant stock information and analysis.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Generate a customized stock report by choosing specific elements to include (e.g., market trends, financial data).", "expected_result": "The generated report correctly includes the selected elements, accurately reflecting the user's specified choices.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Filtering"]}}, {"task": "Navigate through the website and test all buttons function correctly by clicking each of them and back to the homepage.", "expected_result": "Each click on a button leads to the appropriate page or action without any errors, ensuring smooth navigation.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication", "E-commerce"]}}, {"task": "Evaluate the website's form inputs by submitting incomplete or incorrect stock information.", "expected_result": "The system displays appropriate error messages and guidance on how to correct the input errors, ensuring robust input validation.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Verify that the website uses 'white' as the background color and 'navy' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'white' and components (such as buttons, cards, headers, etc.) are styled with the color 'navy', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000002", "instruction": "Please implement a web-based neighborhood mapping application for comparing data across different areas. The application should allow users to compare demographic, economic, and crime data across different areas. The application should also include data dashboards with interactive charts and customizable layouts. Use ivory for the background and forest green for components.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Data Visualization", "Static Page Generation"]}, "application_type": "Analytics Platforms/Dashboards", "ui_instruct": [{"task": "Navigate to the homepage of the neighborhood mapping application.", "expected_result": "The homepage loads successfully with options to compare demographic, economic, and crime data across different areas prominently displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Use the application's search function to select and compare demographic data for two different neighborhoods.", "expected_result": "The application correctly displays the demographic data for both neighborhoods side-by-side, allowing for easy comparison.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Filtering"]}}, {"task": "Interact with a data dashboard by modifying a chart's time range.", "expected_result": "The chart updates dynamically to reflect the modified time range, and the changes are clearly visible.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization", "Dynamic Content Rendering"]}}, {"task": "Rearrange the components of a dashboard by exchanging the display of demographic data and ecnomic data to create a customized layout.", "expected_result": "The display of demographic data and ecnomic data is exchanged and rearraged, and the customized layout is saved and displayed as intended.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Component Styling", "Responsive Behavior"]}}, {"task": "Verify that the website uses 'ivory' as the background color and 'forest green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ivory' and components (such as buttons, cards, headers, etc.) are styled with the color 'forest green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000003", "instruction": "Please implement a multi-company dashboard for managing and displaying financial data from multiple companies. The dashboard should be able to collect and display financial information from each company, provide consolidated reports, and support cross-company comparisons and reporting. Users should be able to browse financial data from each company, view consolidated reports, and perform financial management and reporting. Apply mint cream as the background; style all components with teal.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "Big Data", "Data Visualization"]}, "application_type": "Analytics Platforms/Dashboards", "ui_instruct": [{"task": "Access the financial data of the first company from the dashboard.", "expected_result": "The page displays the first company's financial information accurately, matching the data provided by that company.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Generate a consolidated financial report across multiple companies.", "expected_result": "A report is successfully generated, displaying combined financial data from all selected companies with a summary section for comparisons.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Data Visualization", "Filtering"]}}, {"task": "Compare specific financial metrics between the second and the third companies using the dashboard's comparison feature.", "expected_result": "The comparison view displays both companies' financial metrics side-by-side, allowing for clear analysis and matching data sources.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Check the navigation bar functionality by clicking each of them and back to the homepage (e.g., home, company data, reports).", "expected_result": "Each click on the navigation bar leads to the corresponding section without delay or navigation errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'mint cream' as the background color and 'teal' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'mint cream' and components (such as buttons, cards, headers, etc.) are styled with the color 'teal', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000004", "instruction": "Please implement a sports analytics website that provides basketball betting data and analysis. The website should have functionalities for data visualization, match prediction, and betting recommendations. Users should be able to browse data for basketball, view match history, team rankings, player performance, and make informed betting decisions based on the analysis results. Define the background as ghost white and components as slate gray.", "Category": {"primary_category": "Data Management", "subcategories": ["Data Visualization", "API Integration", "Big Data"]}, "application_type": "Analytics Platforms/Dashboards", "ui_instruct": [{"task": "Navigate to the sports data visualization section for basketball.", "expected_result": "The page displays graphical representations of sports data relevant to the basketball, such as charts or graphs, without any layout issues or missing data points.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization"]}}, {"task": "Access the match prediction feature for an upcoming game.", "expected_result": "The match prediction page correctly shows predicted outcomes with percentage probabilities, based on current data and analysis, without any technical errors or missing information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Use the search function to find a specific team's historical match data.", "expected_result": "The search results page displays a list of matches involving the specified team, sorted chronologically, with complete match details such as scores and dates.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Check the team rankings page.", "expected_result": "The page lists teams ranked according to their current standings, with clear markers indicating any ties, and contains accurate data consistent with known league standings.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Evaluate the player performance section for individual stats.", "expected_result": "The section shows detailed statistics for players, including metrics like goals, assists, and average ratings, with data clearly labeled and easy to interpret.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Assess the betting recommendations provided for a specific match.", "expected_result": "The recommendations offer actionable betting advice backed by data analysis, including relevant statistics or trends that support the suggestions.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Verify that the website uses 'ghost white' as the background color and 'slate gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ghost white' and components (such as buttons, cards, headers, etc.) are styled with the color 'slate gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000005", "instruction": "Please implement a dashboard website for displaying regulatory policies. The website should have data visualization capabilities to clearly display complex regulatory policies. Users should be able to browse and analyze different policies, view related data and charts, and be able to filter and sort as needed. Assign lavender to the background and indigo to the UI elements.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Data Visualization", "Static Page Generation"]}, "application_type": "Analytics Platforms/Dashboards", "ui_instruct": [{"task": "Test the data visualization feature for a selected regulatory policy.", "expected_result": "Selecting a policy should present corresponding charts and graphs that accurately represent the policy data, enhancing user understanding.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization"]}}, {"task": "Check the filter function for regulatory policies.", "expected_result": "Users should be able to apply filters such as policy type, date, and relevance, and the displayed list of policies should update accordingly to reflect the input filters.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Assess the sorting functionality within the dashboard.", "expected_result": "Users should be able to sort policies by criteria such as date, name, or relevance, and the list should reorder to reflect this criteria accurately.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Confirm navigation between different sections of the website.", "expected_result": "Users should seamlessly navigate between different sections such as policy overview, related data, and visualizations, with the current section clearly indicated.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Evaluate the clarity and relevance of the content displayed for the first regulatory policy.", "expected_result": "The description and details provided for the first policy should be clear, relevant to the policy intended, and assist users in understanding complex regulatory information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Assess the policy search functionality on the website.", "expected_result": "When entering a search query related to regulatory policies, relevant results should appear, allowing users to quickly locate specific policies.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Verify that the website uses 'lavender' as the background color and 'indigo' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lavender' and components (such as buttons, cards, headers, etc.) are styled with the color 'indigo', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000006", "instruction": "Please implement a solar dashboard to display real-time and historical solar data. The dashboard should have functionalities for real-time data display, historical data query, and chart analysis. Users should be able to view real-time data such as solar power generation, power consumption, and battery percentage, and query historical data to view trends. Configure the background color to honeydew, with components using dark olive green.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Data Visualization", "Dynamic Content Rendering"]}, "application_type": "Analytics Platforms/Dashboards", "ui_instruct": [{"task": "Verify the display of real-time solar power generation data.", "expected_result": "The dashboard should show a continuously updating numerical value or graph indicating the current solar power generation.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test the display of real-time power consumption data.", "expected_result": "The dashboard should present a real-time updating figure or chart that accurately reflects the current power consumption levels.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Validate the real-time display of battery percentage.", "expected_result": "The dashboard should continuously update to show the current percentage of battery charge, clearly and accurately.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Check the functionality of querying historical data from the solar power generation data by a start and end date.", "expected_result": "Users should be able to input a start and end date, and the dashboard should return relevant data trends for the selected period.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Test the navigation functionality between the real-time data display and historical data query sections.", "expected_result": "Users should be able to smoothly navigate between sections using clearly labeled tabs or buttons without page reload issues.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Navigation"]}}, {"task": "Verify that the website uses 'honeydew' as the background color and 'dark olive green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'honeydew' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark olive green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000007", "instruction": "Please develop a web-based Texas Hold'em poker game with features such as game lobby, table games, and chat functionality. Users should be able to create or join game rooms, play Texas Hold'em, view game records, and manage their account information. The game lobby should display available game rooms, current game status, and player information. The table game should display player hand cards, community cards, betting information, and action buttons. Implement azure for the page background and midnight blue for the elements.", "Category": {"primary_category": "User Interaction", "subcategories": ["Real-time Features", "Form Systems", "Authentication"]}, "application_type": "Browser-Based Games", "ui_instruct": [{"task": "Ensure the game lobby displays all available game rooms.", "expected_result": "The game lobby shows a list of game rooms with current game statuses and player information visible, aligning with the data from a known backend source.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test the functionality to create a new game room.", "expected_result": "Upon attempting to create a game room, it appears immediately in the game lobby with the correct creator assigned as the initial player.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Validate that users can join an existing game room.", "expected_result": "The user successfully joins the selected game room, and their information is updated correctly in the player list for that room.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Confirm that users can view and play a round of Texas Hold'em at a table game.", "expected_result": "The table game displays player hand cards, community cards, betting information, and action buttons accurately, allowing the user to participate fully in a game round.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication", "Generation", "E-commerce"]}}, {"task": "Check the display of user game records.", "expected_result": "Users can navigate to their profile to view a list of past game results and statistics correctly, reflecting accurate game records.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'azure' as the background color and 'midnight blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'azure' and components (such as buttons, cards, headers, etc.) are styled with the color 'midnight blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000008", "instruction": "Please implement an online trivia contest app for hosting knowledge competitions. The app should have functionalities for contest enrollment, question display, answer submission, scoring, and leaderboard. Users should be able to browse and enroll in contests, answer contest questions, submit answers, view their scores and rankings, and compare their performance with others on the leaderboard. Specify beige as the base color and saddle brown for all components.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Real-time Features", "AI Integration"]}, "application_type": "Browser-Based Games", "ui_instruct": [{"task": "Navigate to the contests page and enroll in the first contest.", "expected_result": "The user is successfully enrolled in the first contest, and an enrollment confirmation is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Start a contest and view the first question on the app.", "expected_result": "The first question is displayed correctly, including all options and any associated media.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Communication"]}}, {"task": "Submit an answer for a question during the contest.", "expected_result": "The answer submission is acknowledged with a confirmation and feedback, if any, is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "View the score after completing a contest.", "expected_result": "The user's score is displayed accurately, along with any applicable feedback.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Access the leaderboard for the first contest the user participated in.", "expected_result": "The leaderboard is displayed with the user's ranking and scores of other participants.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'beige' as the background color and 'saddle brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'beige' and components (such as buttons, cards, headers, etc.) are styled with the color 'saddle brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000009", "instruction": "Please implement a chess web application where users can play chess online. The application should have functionalities for creating new games, joining existing games, moving pieces, undoing moves, and resigning. Users should be able to click buttons to choose from different board themes and difficulty levels, and view game history and statistics. Style the layout with alice blue in the background and steel blue for the interface.", "Category": {"primary_category": "User Interaction", "subcategories": ["Real-time Features", "Form Systems", "AI Integration"]}, "application_type": "Browser-Based Games", "ui_instruct": [{"task": "Create a new chess game through the \"New Game\" button on the homepage.", "expected_result": "The user is successfully redirected to a new game screen, where they can see an empty chessboard ready for play, indicating a new game has started.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Join an existing chess game using the \"Join Game\" feature.", "expected_result": "The UI should load the specific chess game, and the user should be able to view and interact with the chessboard.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Make a legal move on the chessboard by selecting a piece and moving it to an allowable position.", "expected_result": "The selected piece moves to the new position according to chess rules, and the move is visually updated on the board.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Undo the last move using the \"Undo\" button in a game session.", "expected_result": "The last move made is reversed, and the chessboard returns to its previous state before that move.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Resign from the current game by clicking the \"Resign\" button.", "expected_result": "The game ends, with the user being marked as having resigned. A confirmation message or screen displays the resignation and final game state.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Change the board theme by selecting a different option from the \"Theme\" button.", "expected_result": "The chessboard's appearance changes immediately to reflect the selected theme while maintaining the board's functionality.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Component Styling"]}}, {"task": "Select a different difficulty level for a new game from the \"Difficulty\" settings.", "expected_result": "The system acknowledges the selected difficulty level, and it is applied to the current game session influencing the opponent's intelligence if applicable.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "View the game history of the last completed game session.", "expected_result": "A list or visual representation of all moves made during the session appears, allowing the user to scroll through and review each move.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'alice blue' as the background color and 'steel blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'alice blue' and components (such as buttons, cards, headers, etc.) are styled with the color 'steel blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000010", "instruction": "Please implement a wheel of fortune website where users can spin the wheel to win prizes. The website should have functionalities for spinning the wheel, displaying prizes, and recording user winning records. Users should be able to spin the wheel, view the prize list, view their own winning records. Use light gray as the default background and dark red for component styling.", "Category": {"primary_category": "User Interaction", "subcategories": ["Real-time Features", "CRUD Operations", "Data Visualization"]}, "application_type": "Browser-Based Games", "ui_instruct": [{"task": "Spin the wheel to initiate a gameplay session.", "expected_result": "The wheel spins, stops at a segment, and displays the prize won without any errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "View the list of available prizes before spinning the wheel.", "expected_result": "A complete and accurate list of prizes is displayed, matching the set prizes available on the wheel.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "After spinning the wheel, navigate to the section displaying user winning records.", "expected_result": "The user's winning record is updated to include the latest prize won, with correct details on date and prize.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'light gray' as the background color and 'dark red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light gray' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000011", "instruction": "Please implement a text-based strategy browser game where players can choose a race, manage resources, upgrade, and battle. The game should have multiple pages, including the base page, ranking page, store, train page, workers page, upgrades page, bank page, messages page, and reports page. Players can choose from four races: Humans, Dragonborns, Elves, and Dwarfs, each with unique attributes. Players can manage resources, including gold, iron, wood, and wheat, and can upgrade their city, workers, and soldiers. Design the site using seashell as the background and crimson for content blocks.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Real-time Features", "AI Integration"]}, "application_type": "Browser-Based Games", "ui_instruct": [{"task": "Navigate to the \"Choose Race\" page and select each race (Humans, Dragonborns, Elves, Dwarfs) one by one and back to the homepage after selecting for another select.", "expected_result": "Each click on a race should display specific attributes unique to that race, and the selection should be confirmed on the page.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Navigation"]}}, {"task": "On the base page, attempt to allocate resources (gold, iron, wood, wheat) to upgrade the city.", "expected_result": "The resources should be deducted from the total, and an upgrade confirmation message should appear with visible changes to the city level or attributes.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations", "Generation"]}}, {"task": "Visit the \"Ranking Page\" and verify the rank listing of players.", "expected_result": "The page should display a sorted list of players by rank, with accurate and clear presentation relevant to their performance metrics.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Go to the \"Store\" and purchase an item using available resources.", "expected_result": "The selected item should be removed from the store and added to your inventory, with the appropriate deduction in resources.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Access the \"Train Page\" and begin training workers or soldiers.", "expected_result": "Training should commence with a status update visible, and there should be an indication of resource consumption related to this activity.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations", "Communication"]}}, {"task": "Navigate to the \"Workers Page\" and assign a task to workers.", "expected_result": "The task should be acknowledged by the system with relevant feedback on expected completion, and any resource costs should be visibly deducted.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Visit the \"Upgrades Page\" and attempt to upgrade a soldier.", "expected_result": "The upgrade should succeed, show updated soldier stats, and the necessary resources should be spent.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Access the \"Bank Page\" and deposit gold.", "expected_result": "The deposited gold should reflect in the bank balance, deducting from available on-hand funds with confirmation of the transaction.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Verify that the website uses 'seashell' as the background color and 'crimson' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'seashell' and components (such as buttons, cards, headers, etc.) are styled with the color 'crimson', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000012", "instruction": "Please implement a baseball simulation website for simulating baseball games and managing baseball teams. The website should have functionalities for player statistics tracking, team management, and live game simulation. Users should be able to view detailed player statistics, manage team rosters and finances, simulate games, and view the results. Users should also be able to adjust team strategies and lineups based on their management decisions. Apply floral white for the layout background and dark goldenrod for interactive elements.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "Big Data", "AI Integration"]}, "application_type": "Browser-Based Games", "ui_instruct": [{"task": "Navigate to the player statistics section and select a player to view detailed statistics.", "expected_result": "The page correctly displays all relevant statistics for the selected player, including batting average, home runs, and RBIs.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Open the game simulation feature and initiate a new game simulation.", "expected_result": "The simulation begins, displaying real-time play-by-play updates throughout the game.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Attempt to adjust the team's strategy settings for defense before starting a game simulation.", "expected_result": "The strategy changes are saved successfully and are reflected in the game simulations where defensive strategies are altered according to the adjustments.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows", "Communication"]}}, {"task": "Review the team's financial management section and adjust the budget allocation for training expenses.", "expected_result": "Budget adjustments for training are saved and updates are visibly reflected in the financial summary.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Form Operations"]}}, {"task": "Use the navigation menu to access and then return from each main section (player statistics, team management, live game simulation) to the homepage.", "expected_result": "Navigation is seamless without broken links, and returning to the homepage consistently displays the correct content.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'floral white' as the background color and 'dark goldenrod' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'floral white' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark goldenrod', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000013", "instruction": "Please implement a 2048 game website for users to play the 2048 game. The website should have functionalities for starting a new game, moving tiles, merging tiles, game over, and reviving. Users should be able to start a new game, move tiles up, down, left, or right, merge identical tiles, and win the game by achieving the 2048 result. If the game is over, users can choose to revive and continue playing. Choose linen for the background; set all component colors to maroon.", "Category": {"primary_category": "User Interaction", "subcategories": ["Real-time Features", "Form Systems"]}, "application_type": "Browser-Based Games", "ui_instruct": [{"task": "Start a New Game", "expected_result": "A new game board is initialized with two randomly placed tiles, typically 2s or 4s, and the score is reset to zero.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Move Tiles Up", "expected_result": "All tiles should slide upward to fill available space, and if two tiles of the same value collide, they merge into a single tile with the combined value. Check that the board updates correctly and a new tile (2 or 4) appears in an empty spot.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Move Tiles Down", "expected_result": "All tiles should slide downward to fill available space, and if two tiles of the same value collide, they merge into a single tile with the combined value. Confirm that the board updates correctly and a new tile (2 or 4) appears in an empty spot.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Move Tiles Left", "expected_result": "All tiles should slide to the left to fill available space, and if two tiles of the same value collide, they merge into one tile with the combined value. Ensure the board updates correctly and a new tile (2 or 4) appears in an empty spot.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Move Tiles Right", "expected_result": "All tiles should slide to the right to fill available space, and if two tiles of the same value collide, they merge into one tile with the combined value. Verify the board updates correctly and a new tile (2 or 4) appears in an empty spot.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Trigger Game Over", "expected_result": "When no valid moves are possible, a game over message or notification should be displayed, providing an option for the user to revive or continue the game.", "task_category": {"primary_category": "Functional Testing", "subcategories": []}}, {"task": "Revive the Game After Game Over", "expected_result": "Playing should resume with the board in the same state as before the game over, with additions of new tiles as per usual move rules, and a revived notification or acknowledgment should be shown.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows", "Communication"]}}, {"task": "Verify that the website uses 'linen' as the background color and 'maroon' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'linen' and components (such as buttons, cards, headers, etc.) are styled with the color 'maroon', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000014", "instruction": "Please implement a website for a credit repair company to generate leads. The website should have a form-filling function, allowing users to input personal information and credit status. The website should also have a credit score inquiry function and an introduction to credit repair services. Users can browse the website, learn about credit repair services, and fill out the form to submit lead information. Set old lace as the body background and use rosy brown for the UI.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "E-commerce", "Data Visualization"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Test the form submission functionality by inputting valid personal information and credit status details.", "expected_result": "The form should submit successfully without errors, and a confirmation message should display indicating the lead information was recorded.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Verify the credit score inquiry function by accessing the feature and submitting a valid input.", "expected_result": "The system should process the inquiry without errors and provide appropriate feedback or next steps for the user regarding their credit score.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Ensure content accuracy by reviewing the informational text on credit repair services presented on the homepage.", "expected_result": "The content should be relevant, free of grammatical errors, and provide a clear introduction and explanation of the credit repair services offered by the company.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Check and navigate to an introduction to credit repair services.", "expected_result": "The website shows an introduction to credit repair services.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'old lace' as the background color and 'rosy brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'old lace' and components (such as buttons, cards, headers, etc.) are styled with the color 'rosy brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000015", "instruction": "Please implement a website for a clinical office to display office information and services. The website should have basic pages, including a homepage, about us, services, and contact us. Users should be able to browse the website, learn about the office's information, view the services provided, and contact the office through the contact page. The website should also have a simple navigation menu to help users quickly find the information they need. Style all pages with a light cyan background and cadet blue components.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Data Visualization"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Click on the \"About Us\" page link in the navigation menu.", "expected_result": "The \"About Us\" page loads, providing accurate information about the clinical office, such as its history, mission, and team, without any broken links or missing images.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Click on the \"Services\" page link in the navigation menu.", "expected_result": "The \"Services\" page loads, detailing the services provided by the clinical office, with each service accurately described and no content overlap or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Click on the \"Contact Us\" page link in the navigation menu.", "expected_result": "The \"Contact Us\" page loads correctly and includes a form with fields for the user's name, email, phone number, and message, with clear instructions for submission.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Navigation"]}}, {"task": "Fill out the contact form on the \"Contact Us\" page with valid input and submit.", "expected_result": "The form submits successfully, with a confirmation message displayed indicating that the office received the user's inquiry.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Verify that the website uses 'light cyan' as the background color and 'cadet blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light cyan' and components (such as buttons, cards, headers, etc.) are styled with the color 'cadet blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000016", "instruction": "Please implement a website for a solar company to display company information and products. The website should have functionalities for company introduction, product showcase, news updates, and contact us. Users should be able to browse the company's history, mission, and values, view detailed product information, learn about the company's latest news and events, and contact the company through the contact page with name, email and message. Use lemon chiffon in the background layer and chocolate for the component layer.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Dynamic Content Rendering"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Navigate to the \"Company Introduction\" page.", "expected_result": "The page should display sections for company history, mission, and values. The information should be relevant and correctly reflect the solar company’s background and goals.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Navigate to the \"Product Showcase\" page and select the first product.", "expected_result": "Detailed product information, including specifications and images, should be accurately displayed. Content should be clear and match the company's product line.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Access the \"News and Updates\" section on the website.", "expected_result": "Latest news articles and event updates related to the company should be listed in reverse chronological order, with correct dates and comprehensive details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Fill in and submit the \"Contact Us\" form with valid details (e.g., name, email, message).", "expected_result": "Form submission should succeed without errors, and a confirmation message should appear to acknowledge receipt.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Use the website’s main navigation menu to move and return the homepage between the \"Company Introduction,\" \"Product Showcase,\" \"News,\" and \"Contact Us\" pages .", "expected_result": "Navigation should be smooth, with each menu link leading to the correct page without broken links or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'lemon chiffon' as the background color and 'chocolate' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lemon chiffon' and components (such as buttons, cards, headers, etc.) are styled with the color 'chocolate', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000017", "instruction": "Please create a one-page website for promoting Fundraiser Day, including introduction to the event, fundraiser testimonials, offer information, and company information. The website should have functionalities such as an automatically moving carousel for displaying offers, a section for displaying fundraiser testimonials, and a section for displaying company information. Users should be able to browse the website to learn more about the Fundraiser Day event. Establish cornsilk as the main background and peru for the controls.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Data Visualization"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Check the accuracy of content within the introduction section about Fundraiser Day.", "expected_result": "The introduction should clearly explain what Fundraiser Day is about, including its purpose and significance, aligning with the event's promotional goals.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Validate the presence and correctness of fundraiser testimonials.", "expected_result": "The testimonials section should display real and relevant feedback from previous fundraiser participants, demonstrating positive experiences and successful outcomes.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Ensure that the company information section is visible and accurate.", "expected_result": "The section should provide complete and correct details about the company, including its mission, background, and role in organizing Fundraiser Day.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Test the website's navigation to ensure users can easily access between the introduction, testimonials, offers, and company information sections.", "expected_result": "Users should be able to smoothly navigate between the introduction, testimonials, offers, and company information sections with no broken links or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Assess the website's content for relevance to the Fundraiser Day promotion.", "expected_result": "All text and multimedia content should focus on promoting Fundraiser Day, eliminating any unrelated information that could detract from the event's promotion.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Verify that the website uses 'cornsilk' as the background color and 'peru' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'cornsilk' and components (such as buttons, cards, headers, etc.) are styled with the color 'peru', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000018", "instruction": "Please implement a house cleaning service website that provides cleaning services. The website should have functionalities for booking services, service inquiry, and contact us. Users should be able to browse the website, understand the details of the cleaning services, book cleaning services, check service status, and contact customer service staff by phone number and email address. Set the background to azure mist, and apply dark slate blue to components.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Form Systems", "Authentication"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Navigate to the homepage and verify the presence of main navigation links (Home, Services, Book Now, Contact Us).", "expected_result": "All navigation links are present and correctly labeled, facilitating easy access to different sections of the website.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Click on the \"Services\" link and ensure all available cleaning services are listed with descriptions.", "expected_result": "A comprehensive list of cleaning services is displayed, each accompanied by a clear and accurate description.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Access the \"Book Now\" page and successfully submit a booking form with all required fields completed (e.g., service type, date, customer details).", "expected_result": "The form is submitted without errors, and a confirmation message is displayed indicating a successful booking.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Navigate to the \"Contact Us\" page and check that contact information is provided, including a phone number and email address.", "expected_result": "The page displays accurate contact details, allowing users to reach out for support.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "From the homepage, use the navigation to access the service status feature and input a booking reference to check its status.", "expected_result": "The service status related to the entered booking reference is displayed clearly, providing users with current information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Verify that the website uses 'azure mist' as the background color and 'dark slate blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'azure mist' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark slate blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000019", "instruction": "Please create a software solutions website to provide information to prospective customers. The website should have content that introduces software solutions and staffing business, including product and service descriptions, industry news and trends, customer cases and success stories, etc. The website should be able to attract the attention of small to medium-sized businesses, and the content should be easy to understand and engaging. Users should be able to browse the website, search for relevant information or product descriptions, read articles and news, and contact the website owner for more information. Configure all backgrounds with misty rose and all components with firebrick.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Dynamic Content Rendering"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Test the navigation menu to ensure it includes all required sections (Home, Software Solutions, Industry News, Customer Stories, Contact).", "expected_result": "Each section is present, correctly labeled, and links lead to the appropriate page without errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the search functionality allows users to find relevant articles and product descriptions.", "expected_result": "Entering search terms returns a list of pertinent results, sorted by relevance, with no broken links.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Test the contact form submission process.", "expected_result": "Completing and submitting the form triggers a confirmation message, and the form content is correctly sent to the designated email address.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Verify the presence and accuracy of industry news and trends content.", "expected_result": "Relevant and up-to-date industry news articles are displayed, each with a correct publication date and author information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Validate the inclusion and accuracy of customer cases and success stories.", "expected_result": "Each customer story details a genuine use case or success story with correct and verified details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Verify that the website uses 'misty rose' as the background color and 'firebrick' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'misty rose' and components (such as buttons, cards, headers, etc.) are styled with the color 'firebrick', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000020", "instruction": "Please implement a website for a phone operator to display service plans and provide customer support. The website should have functionalities for displaying service plan details and an online customer support tool. Users should be able browse service plans, get help, manage their account information, and access their personal details. Assign light goldenrod to body backgrounds and olive drab to main components.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "User Interaction"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Test the functionality of the customer support chat tool.", "expected_result": "Users can access the online customer support tool from the homepage, initiate a chat session, and receive a response or confirmation that a support agent will assist shortly.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Validate the ability to browse and view details of a service plan.", "expected_result": "By clicking on a service plan from the list, users are navigated to a dedicated page that shows comprehensive details about the service plan, such as features, benefits, and pricing.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Ensure users can update their account information.", "expected_result": "Users can navigate to the account management section, update personal information (e.g., name, email), and receive a success message after saving changes.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Test the navigation menu to ensure it includes key sections like \"Service Plans,\" \"Customer Support.\"", "expected_result": "The navigation menu is visible on all pages and provides direct links to the service plans, and customer support, allowing users to easily navigate the website.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'light goldenrod' as the background color and 'olive drab' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light goldenrod' and components (such as buttons, cards, headers, etc.) are styled with the color 'olive drab', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000021", "instruction": "Please implement a website for The All-In Bourbon Bar to showcase its products and services. The website should have functionalities for displaying menus, introducing the membership-only private poker room, and showcasing events and promotions. Users should be able to browse the website, view menus, learn about the private poker room, view events and promotions, and make online reservations or purchases. Use peach puff for container backgrounds and indian red for component visuals.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Dynamic Content Rendering", "Media Display"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Navigate to the menu page using the main navigation bar.", "expected_result": "The menu page should load successfully, displaying an up-to-date list of The All-In Bourbon Bar's available food and drink items, complete with descriptions and prices.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Access the private poker room information page from the main menu.", "expected_result": "The page should provide a detailed introduction to the membership-only private poker room, including membership benefits and how to join.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Click on the events and promotions section from the homepage.", "expected_result": "The events and promotions page should display current and upcoming events and any available promotions, with detailed descriptions, dates, and relevant offers.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Attempt to make a reservation through the website's reservation form.", "expected_result": "The reservation form should accept input data, process it without error, and provide a confirmation message indicating the reservation was successful.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Verify that the website uses 'peach puff' as the background color and 'indian red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'peach puff' and components (such as buttons, cards, headers, etc.) are styled with the color 'indian red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000022", "instruction": "Please implement a customer service call logging system to record and manage customer service calls. The system should have functionalities for client identification, call type selection, information recording, action step recording, follow-up step recording, and additional information recording. Users should be able to create new call logs, view open calls, view to-do calls, and generate call log reports. The system should also have a client creator wizard, client information modification functionality, and permission control. Set page background to light pink; color all components with medium violet red.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "User Interaction"]}, "application_type": "CRM Systems", "ui_instruct": [{"task": "Use the client creator wizard to add a new client.", "expected_result": "The new client is saved successfully, and a confirmation message is displayed. The client appears in the client list.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Initiate the creation of a new call log and input required fields (e.g., client identification, call type, information recording).", "expected_result": "Call log is created successfully with all entered information preserved, and a confirmation message is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Modify an existing client's information.", "expected_result": "The changes are saved successfully, a confirmation message is displayed, and updated information is reflected in the client's profile.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Select and record an action step in an existing call log.", "expected_result": "The action step is recorded and saved successfully, and a confirmation message is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Check the navigation to view open calls.", "expected_result": "Open calls are displayed in a list format, and the page loads without errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Access and view the list of to-do calls.", "expected_result": "The to-do calls list is displayed correctly and is consistent with previously logged information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Generate a call log report.", "expected_result": "The system generates a report containing all relevant call log data, and the report is available for download or viewing.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Verify that the website uses 'light pink' as the background color and 'medium violet red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light pink' and components (such as buttons, cards, headers, etc.) are styled with the color 'medium violet red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000023", "instruction": "Please implement a customer relationship management website for managing sales leads and reporting. The website should have functionalities for automated message sending, organizing and categorizing leads, updating lead information and status, updating settings and dropdown menus, and reporting. Users should be able to browse and manage sales leads, view reports, and receive best practice and integration advice. Define background as papaya whip; define components with dark orange.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "Big Data"]}, "application_type": "CRM Systems", "ui_instruct": [{"task": "Verify that the \"Add New Lead\" form allows users to fill out and submit details correctly.", "expected_result": "The form submissions successfully add the lead to the system.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Test the automated message-sending functionality by initiating a message to a specific lead.", "expected_result": "The message is sent automatically, and a confirmation notification is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Confirm that lead information can be updated by modifying an existing lead's status.", "expected_result": "The lead’s status is successfully updated, and the new status is accurately displayed on the lead’s profile.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Test website navigation by using the provided menu to access the best practice and integration advice section.", "expected_result": "The relevant page is successfully loaded, and users can view the information on best practices and integration advice.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'papaya whip' as the background color and 'dark orange' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'papaya whip' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark orange', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000024", "instruction": "Please implement a customer support chatbot on the website that can provide customer support and handle customer interactions. The chatbot should be able to answer frequently asked questions, provide product information, and assist users in completing orders. Users should be able to interact with the chatbot through a chat interface to get the information and help they need. Implement styling with snow for the background and dim gray for components.", "Category": {"primary_category": "User Interaction", "subcategories": ["AI Integration", "Form Systems", "Real-time Features"]}, "application_type": "CRM Systems", "ui_instruct": [{"task": "Initiate a conversation with the chatbot by typing \"What are your frequently asked questions?\"", "expected_result": "The chatbot responds with a list of frequently asked questions without delay.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Type \"I need help with placing an order\" into the chatbot interface.", "expected_result": "The chatbot guides the user through the order placement process clearly and effectively.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Communication"]}}, {"task": "Enter the question \"How can I return a product?\" into the chatbot.", "expected_result": "The chatbot responds with the correct procedure for returning a product.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Test the chatbot's capability to handle incorrect input by typing a nonsensical string such as \"asdfghjkl\".", "expected_result": "The chatbot politely alerts the user that the input was not understood and prompts to rephrase or ask another question.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Verify that the website uses 'snow' as the background color and 'dim gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'snow' and components (such as buttons, cards, headers, etc.) are styled with the color 'dim gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000025", "instruction": "Please implement a web application for an insurance industry automation system to manage insurance business. The system should have functionalities for customer management, policy management, and claims management. Users should be able to browse customer information, policy information, and claims information, and perform corresponding operations. The system should also have data analysis and reporting capabilities, generating various reports and charts. Apply theme using whitesmoke as background and dark cyan for elements.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "Big Data", "Data Visualization"]}, "application_type": "CRM Systems", "ui_instruct": [{"task": "Navigate to the customer management section and view the list of customers.", "expected_result": "A list of customers is displayed with accurate and relevant information, including customer names, IDs, and contact details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Click on a specific customer's profile to view detailed information.", "expected_result": "The detailed customer profile is displayed, showing complete and correct information such as personal details, policy associations, and claim history.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Navigate to the policy management section and view the list of insurance policies.", "expected_result": "A list of policies is displayed with accurate information, including policy numbers, types, and status.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Select the first policy to view detailed policy information.", "expected_result": "The detailed information for the selected policy is displayed correctly, including coverage details, premium amounts, and expiration dates.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Navigate to the claims management section and view the list of claims.", "expected_result": "The system displays a list of claims with relevant information such as claim numbers, statuses, and associated policy numbers.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Access the data analysis and reporting feature to generate a report.", "expected_result": "The system successfully generates a report that contains accurate data, presented in a clear format, with various charts and graphs illustrating the information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Verify that the website uses 'whitesmoke' as the background color and 'dark cyan' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'whitesmoke' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark cyan', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000026", "instruction": "Please implement a polls website for users to cast their votes. The website should have functionalities for voting and viewing voting results. Users should be able to browse different voting options, cast votes for selected options, and view voting results. Color the background using white and set component styles to navy.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Data Visualization"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Test the navigation to the voting page from the homepage.", "expected_result": "The user can navigate to the voting page without errors, and all voting options are displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Check the ability to browse different voting options without casting a vote.", "expected_result": "The user can view a list of voting options, and each option should be clearly displayed with relevant information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Filtering"]}}, {"task": "Test the voting functionality by casting a vote on a selected option.", "expected_result": "The vote is successfully recorded, and the user receives a confirmation notification indicating that their vote has been cast.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Check the voting results page for the display of current voting results.", "expected_result": "The user can view the up-to-date voting results, including relevant statistics or graphical representations.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Verify that the website uses 'white' as the background color and 'navy' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'white' and components (such as buttons, cards, headers, etc.) are styled with the color 'navy', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000027", "instruction": "Please implement a community website for sharing promotions and discounts. The website should have functionalities for browsing promotions, sharing promotions, and searching promotions. Users should be able to browse and share promotions, and search for promotions of interest. The website should also have a management backend for managing users, promotions, and website settings. Use ivory for the outer layout and forest green for UI blocks.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "CRUD Operations", "Data Visualization"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Browse the website's promotions section.", "expected_result": "A list of available promotions should be displayed clearly, with each promotion showing key details such as description, discount rate, and expiration date.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Use the website's search feature to find promotions related to electronics.", "expected_result": "The search results should accurately list promotions that match the electronics, excluding irrelevant results.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Share a new promotion using the provided form with all necessary details filled in.", "expected_result": "The new promotion should be added to the website and visible to all users with correct formatting and details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Navigate through the main sections (Home, Browse Promotions, Share Promotion, Search) using the website's navigation menu.", "expected_result": "Each menu link should accurately direct the user to the corresponding section without errors or misdirection.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test the user management functionality in the backend by attempting to view and edit user information.", "expected_result": "The admin should be able to view a list of users, select a user, and make changes to their account details if needed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Generation"]}}, {"task": "Verify that the website uses 'ivory' as the background color and 'forest green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ivory' and components (such as buttons, cards, headers, etc.) are styled with the color 'forest green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000028", "instruction": "Please implement a fishing contest website to manage and display fishing contest information. The website should have functionalities for posting contest announcements, displaying contest results, and showcasing contest photos. Users should be able to browse contest information, register for contests, and view contest results. Set primary background to mint cream and elements to teal.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Data Visualization"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Navigate to the \"Contest Announcements\" page and check for the presence of the latest contest announcement.", "expected_result": "The page displays the most recent contest announcement with accurate and up-to-date information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Attempt to register for a contest using the provided registration form with valid details.", "expected_result": "The registration form submits successfully, displaying a confirmation message indicating successful registration.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows"]}}, {"task": "Access the \"Contest Results\" page and verify the display of the most recent contest results.", "expected_result": "The page shows detailed results of the latest contest, including winners and scores, accurately.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Navigate through the website using the main menu links to ensure all sections are accessible.", "expected_result": "Each menu link directs to the correct page without errors, and all pages load correctly.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "View the \"Contest Photos\" section without logging in to ensure public visibility of the content.", "expected_result": "Photos from past contests are visible to all users, showcasing the contests' highlights.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'mint cream' as the background color and 'teal' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'mint cream' and components (such as buttons, cards, headers, etc.) are styled with the color 'teal', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000029", "instruction": "Please implement a forum webpage with multiple features. The forum webpage should have functionalities for posting, replying, searching, and browsing by category. Users should be able to browse and search for posts, create new posts, reply to others' posts, and browse posts by category. The forum should also have a user center where users can view their own posts, reply records, and personal information. Choose ghost white for global background and slate gray for all components.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Authentication", "Real-time Features"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Test posting a new forum topic as a user.", "expected_result": "The post is successfully created and visible in the list of posts on the homepage and within its specific category.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Test the reply functionality by responding to an existing post.", "expected_result": "The reply appears directly under the original post in chronological order, and a confirmation is shown after submission.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Test the search feature by entering a specific keyword like health.", "expected_result": "Search results page displays posts containing the health keyword, and results are relevant to the query.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Test browsing posts by selecting a specific category.", "expected_result": "The user is directed to a list of posts belonging to the chosen category, displaying only relevant posts.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Verify content accuracy by checking the user center to view personal posts and replies.", "expected_result": "The user's own posts and reply records are correctly displayed and match previous submissions.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Check the user center for correctness of displayed personal information.", "expected_result": "Personal user information matches the data provided at registration and any subsequent user edits.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Verify that the website uses 'ghost white' as the background color and 'slate gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ghost white' and components (such as buttons, cards, headers, etc.) are styled with the color 'slate gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000030", "instruction": "Please implement a technical website to display technical information and solutions. The website should have functionalities for browsing technical articles, searching technical information, and viewing solutions. Users should be able to browse technical articles, search technical information, view solutions, and communicate with other users.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "User Interaction"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Navigate to the technical articles section using the main navigation menu.", "expected_result": "The technical articles section loads correctly, displaying available articles with a clear and accessible layout.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Use the search functionality to find a specific technical topic.", "expected_result": "Relevant search results are displayed matching the query, and the results are relevant to technical information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Open a technical article and verify its content.", "expected_result": "The article loads without errors and the content displayed is technical in nature, accurate, and complete based on the article’s title.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'lavender' as the background color and 'indigo' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lavender' and components (such as buttons, cards, headers, etc.) are styled with the color 'indigo', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000031", "instruction": "Please implement an anonymous campus discussion platform for students to communicate and discuss. The platform should have a discussion forum feature that allows students to anonymously post, reply to posts, and participate in discussions. Students should be able to browse and search posts, follow topics of interest, and receive notifications. The platform should ensure user privacy and security, protecting students' personal information. Configure your theme with honeydew as background and dark olive green as component color.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Authentication", "Real-time Features"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Post an anonymous message in the discussion forum.", "expected_result": "The message appears in the forum without displaying any personal information about the sender.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Reply anonymously to an existing post in the discussion forum.", "expected_result": "The reply is successfully added and visible under the original post, maintaining the anonymity of the responder.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Search for a post using a specific keyword such as math.", "expected_result": "The search results display relevant posts containing the keyword entered, and irrelevant posts are not shown.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Follow a topic of interest.", "expected_result": "The user interface indicates that the topic is being followed, and related notifications are received if this is part of the system design.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Navigate through different topics and the home page without errors or dead ends.", "expected_result": "All navigation actions direct the user to the intended pages without loading errors or broken links.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test the notification feature by simulating a new post in a followed topic.", "expected_result": "The user receives a notification about the new post without revealing any user's personal details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Verify that the website uses 'honeydew' as the background color and 'dark olive green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'honeydew' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark olive green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000032", "instruction": "Please implement a whistleblower secrets/awareness website to expose truths about business and society. The website should have an anonymous reporting feature, where users can submit their insights and evidence. The website should also have a discussion forum, where users can discuss and share their thoughts and opinions. The website should have a search function, where users can search for specific topics and keywords. The website should also have a news and blog section, where the latest news and articles are published. Use a azure background and apply midnight blue to the UI components.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Real-time Features", "Dynamic Content Rendering"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Test the anonymous reporting feature for submitting insights and evidence.", "expected_result": "Users can submit reports without revealing their identity, and a confirmation message is displayed upon submission.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Verify that the discussion forum is accessible and functional.", "expected_result": "Users can successfully view the forum, create new discussion threads, and post replies to existing threads.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Check the search function for specific topics and keywords.", "expected_result": "The search returns relevant results that accurately correspond to the entered keywords and topics across all sections of the website.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Validate the presence and proper functioning of the news and blog section.", "expected_result": "The latest news and articles are visible, and users can click on a headline to read the full article.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Test the navigation menu for accessibility and ease of use.(e.g., Anonymous Reporting, Forum, Search, News & Blog)", "expected_result": "Users can easily navigate to all main sections (e.g., Anonymous Reporting, Forum, Search, News & Blog) from the homepage with clear and intuitive labels.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'azure' as the background color and 'midnight blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'azure' and components (such as buttons, cards, headers, etc.) are styled with the color 'midnight blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000033", "instruction": "Please implement a Q&A website that answers user-submitted questions. The website should have functionalities for submitting questions, answering questions, and viewing answers. Users should be able to submit questions, view answers, and rate the answers. Set overall background to beige, then style components with saddle brown.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "AI Integration", "Authentication"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Submit a new question using the question submission form.", "expected_result": "The question is successfully posted and appears on the list of submitted questions.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "View the list of submitted questions.", "expected_result": "A list of submitted questions is displayed, including the latest question, sorted appropriately.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Submit an answer to an existing question.", "expected_result": "The answer is successfully posted and visible under the corresponding question.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "View answers to a specific question.", "expected_result": "All answers related to the specific question are displayed clearly beneath the question.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Verify that the website uses 'beige' as the background color and 'saddle brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'beige' and components (such as buttons, cards, headers, etc.) are styled with the color 'saddle brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000034", "instruction": "Please implement a real estate website to display property information and provide search functionality. The website should have features such as property listings, property details, search, and filtering. Users should be able to browse property listings, view property details, use the search function to find specific properties, and filter properties based on certain conditions. Assign alice blue as the background color and apply steel blue to all elements.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Data Visualization"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Click on the \"Property Listings\" main menu link.", "expected_result": "The browser displays a page with a list of properties available for sale/rent, matching the initial query of properties in the database.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Select the first property from the listings to view its details.", "expected_result": "A dedicated property details page is displayed, presenting comprehensive information such as address, price, features, and photographs specific to the selected property.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Perform a search input with the term \"3-bedroom apartment\" in the search bar on the homepage.", "expected_result": "The site displays search results that pertain specifically to properties described as \"3-bedroom apartments.”", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Apply a filter for properties with a price range between $200,000 and $300,000.", "expected_result": "The property listings update to show only those properties between $200,000 and $300,000.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Attempt to navigate back to the home page using the site's navigation menu.", "expected_result": "Users should be redirected to the home page without errors, confirming functional navigation control.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'alice blue' as the background color and 'steel blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'alice blue' and components (such as buttons, cards, headers, etc.) are styled with the color 'steel blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000035", "instruction": "Please implement a cryptocurrency escrow system for secure cryptocurrency transactions. Buyers should be able to browse and select sellers' cryptocurrency products, conduct transactions, and deposit cryptocurrencies into an escrow account. Sellers should be able to view and manage their products and transaction records. The system should also have transaction confirmation, cryptocurrency release, and dispute resolution functionalities. Initialize the background color with light gray and component color with dark red.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Authentication", "API Integration"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Browse the list of available cryptocurrency products.", "expected_result": "The buyer can view a list of products with clear details like name, price, and seller information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Initiate a transaction by selecting a cryptocurrency product and attempting to deposit the equivalent amount into the escrow account.", "expected_result": "The system successfully processes the deposit into the escrow account.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Payment"]}}, {"task": "Add a new cryptocurrency product.", "expected_result": "The product is successfully added and immediately appears in the seller's product list.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Submit a dispute for a transaction.", "expected_result": "The dispute is lodged successfully, and the status of the transaction is updated to 'disputed'.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Verify that the website uses 'light gray' as the background color and 'dark red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light gray' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000036", "instruction": "Please implement a website to automatically search and compare product prices across different states. The website should allow users to select specific product categories and parameters. The website should be able to automatically search and compare product prices across different states, including finding the lowest-priced products, and provide detailed product information, including price, quantity, and supplier information. Apply seashell to the canvas background and crimson to all visible components.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "API Integration", "Data Visualization"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Test the search functionality by selecting a specific product category and parameter.", "expected_result": "The website returns a list of products within the selected category, displaying product names, prices, and suppliers.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Filtering"]}}, {"task": "Test the price comparison feature by searching for a specific product across different states.", "expected_result": "The website displays a comparison of product prices, clearly highlighting the lowest price along with the relevant state and supplier information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Filtering"]}}, {"task": "Verify the customization of search frequency by setting a new frequency for automatic searches in the user settings.", "expected_result": "The customization option saves successfully, and subsequent searches occur at the newly appointed frequency.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering", "Authentication Flows"]}}, {"task": "Test the website's ability to provide detailed product information for a chosen product.", "expected_result": "Detailed product information, including price, quantity, and supplier details, is displayed accurately and clearly.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Verify the navigational elements by attempting to access different sections (e.g., product categories, settings) from the homepage.", "expected_result": "All navigational links lead to the correct pages, with no errors or misdirected links encountered.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'seashell' as the background color and 'crimson' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'seashell' and components (such as buttons, cards, headers, etc.) are styled with the color 'crimson', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000037", "instruction": "Please implement an e-commerce integration feature that allows customers to customize shirts. Customers should be able to input information such as shirt model, fabric, and measurements. The system should be able to generate a corresponding shirt design based on the customer's input and allow them to preview and confirm the design. The system should also be able to handle orders and payments. Declare floral white as the global background color and dark goldenrod for all UI pieces.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "AI Integration", "Form Systems"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Navigate to the shirt customization page via the main menu.", "expected_result": "The website should be redirected to a dedicated page where customers can choose shirt model, fabric, and input measurements.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Navigation"]}}, {"task": "Input a complete set of customization options including shirt model, fabric type, and measurements in the form fields.", "expected_result": "All fields should accept valid inputs without error, and the form should be able to submit successfully.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Generate a design based on the inputted customization options.", "expected_result": "A preview of the customized shirt design should be displayed, matching the selected model, fabric, and measurements.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Component Styling"]}}, {"task": "Validate the preview option by changing one attribute (e.g., fabric type) and regenerate the design.", "expected_result": "The preview should update to reflect the new attribute correctly, demonstrating dynamic design generation.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Form Operations"]}}, {"task": "Confirm the customization and proceed to the order checkout page.", "expected_result": "The system should redirect to the checkout page, where the customized shirt details are displayed along with the price.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Fill in shipping and payment information on the checkout page and submit the order.", "expected_result": "The system should accept valid credit card information, process the order without errors, and provide an order confirmation message.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Payment", "E-commerce"]}}, {"task": "Verify that shirt customization form fields provide feedback or validation warnings for incorrect input (e.g., invalid measurement entries).", "expected_result": "Proper feedback should guide the user in correcting any input errors before proceeding with customization.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Verify that the website uses 'floral white' as the background color and 'dark goldenrod' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'floral white' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark goldenrod', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000038", "instruction": "Please implement a short-term apartment rental website for showcasing and renting apartments. The website should have functionalities for searching, filtering, and booking apartments. Users should be able to browse different types of apartments, search and filter apartments that meet their criteria, book selected apartments, and view booking records. Use linen as the screen background and maroon for component highlights.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Form Systems", "Data Visualization"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Perform a search for apartments using a specific location keyword.", "expected_result": "A list of apartments relevant to the search keyword is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Apply a filter to the apartment search results by selecting one-bedroom.", "expected_result": "Only apartments that match the one-bedroom are displayed in the search results.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Book an apartment by selecting available dates and confirming the booking.", "expected_result": "Booking confirmation is displayed, and the selected dates are marked as unavailable in the calendar.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "View booking records from the user account section.", "expected_result": "The booking records show accurate information of all past and current bookings made by the user.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "E-commerce"]}}, {"task": "Navigate to the homepage from a different page (e.g., booking confirmation page) using the website's main navigation menu.", "expected_result": "The user is redirected to the homepage, which is fully loaded and functional.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'linen' as the background color and 'maroon' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'linen' and components (such as buttons, cards, headers, etc.) are styled with the color 'maroon', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000039", "instruction": "Please develop a domain leasing website for renting and managing domain names. The website should have functionalities for searching, leasing, renewing, and transferring domain names. Users should be able to search for, lease, renew, and transfer domain names, and view domain information and leasing records. The website should also have user management, order management, and payment management functions. Select old lace for layout background and rosy brown for component details.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "File Handling"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Test the domain search functionality by entering a known domain name into the search bar.", "expected_result": "The system should return accurate information about the availability and leasing status of the domain, matching the search term exactly.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Attempt to lease an available domain by going through the leasing process.", "expected_result": "The user should successfully complete the leasing process, receiving a confirmation message and updating the leasing records.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Renew a domain lease that is close to expiration via the renewal option.", "expected_result": "The domain lease should be successfully renewed, with an updated lease expiration date reflected in the user’s leasing records.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Initiate a domain transfer to another user account by following the transfer process.", "expected_result": "The domain should successfully transfer ownership, with both the sending and receiving users receiving notifications and updated records reflecting the transfer.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Communication"]}}, {"task": "Validate the order history feature by viewing the order management section.", "expected_result": "The user should see a comprehensive list of past domain transactions, including leasing, renewing, and transferring activities.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Details Information"]}}, {"task": "Verify that the website uses 'old lace' as the background color and 'rosy brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'old lace' and components (such as buttons, cards, headers, etc.) are styled with the color 'rosy brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000040", "instruction": "Please implement a consulting business website that provides leadership and business training services. The website should have an e-commerce component, allowing customers to purchase services directly from the site. The website should include features such as workshops, online classes, podcasts, and blogs. Users should be able to browse and purchase services, and interact with the website. Set all pages to have a light cyan background and cadet blue components.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Dynamic Content Rendering", "Form Systems"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Verify the website's navigation bar functionality between Home, Services, Workshops, Online Classes, Podcasts, Blogs, and Contact.", "expected_result": "The navigation bar should allow users to access all main sections of the website, including Home, Services, Workshops, Online Classes, Podcasts, Blogs, and Contact.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test the e-commerce functionality by attempting to purchase a service.", "expected_result": "Users should be able to select a service, add it to the cart, proceed to checkout, enter payment details, and receive a confirmation message after a successful transaction.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Check the readability and relevance of content on the Blogs page.", "expected_result": "Blog entries should be relevant to leadership and business training, be free of grammatical errors, and have up-to-date content that aligns with the consulting theme.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Ensure the workshops' schedule information is clearly displayed.", "expected_result": "Users should be able to view detailed information about upcoming workshops, including dates, topics, and speakers, with the ability to register directly from the page.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'light cyan' as the background color and 'cadet blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light cyan' and components (such as buttons, cards, headers, etc.) are styled with the color 'cadet blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000041", "instruction": "Please implement an online trading website for bidding and trading. The website should have functionalities for bidding and trading, allowing users to browse trading opportunities, place orders, manage their trading accounts, and view their trading history. Set the background color to lemon chiffon and the component color to chocolate.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "CRUD Operations", "Data Visualization"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Navigate to the bidding section and place a bid on a trading opportunity.", "expected_result": "The bid is successfully placed and reflected in the user's bid history, with all relevant details accurately recorded.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Browse the available trading opportunities on the website.", "expected_result": "A comprehensive list of trading opportunities is displayed, relevant to the user's preferences, without any missing or irrelevant entries.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "View the user's trading history from the account dashboard.", "expected_result": "A detailed and accurate history of all past trading and bidding activities is displayed, including dates and transaction details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Update account information via the account management page.", "expected_result": "The information is updated successfully, and a confirmation message is displayed, with changes reflected correctly on subsequent views.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Verify that the website uses 'lemon chiffon' as the background color and 'chocolate' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lemon chiffon' and components (such as buttons, cards, headers, etc.) are styled with the color 'chocolate', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000042", "instruction": "Please implement an email sending platform for sending emails. The platform should have functionalities for composing, sending, and managing emails. Users should be able to compose emails, select recipients, send emails, and manage sent emails. The platform should also have features such as email templates, attachment uploads, and recipient management. Use cornsilk for the background and peru for components.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "File Handling", "E-commerce"]}, "application_type": "Email Clients", "ui_instruct": [{"task": "Locate and use the compose email feature to draft a new email.", "expected_result": "The platform displays a new email composition interface with fields for the subject, body, recipients, and attachment options.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Select a recipient from the recipient management list and add them to the new email.", "expected_result": "The selected recipient is added to the recipients' field in the compose email interface.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication", "Form Operations"]}}, {"task": "Upload an attachment to an email draft.", "expected_result": "The attachment is successfully uploaded and displayed within the email draft without any errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation", "Communication"]}}, {"task": "Send a composed email to the selected recipients.", "expected_result": "The email is successfully sent, a confirmation message is received, and the email appears in the sent emails folder.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Access the sent emails section and verify that the recently sent email is present.", "expected_result": "The sent emails section displays the recently sent email with the correct recipient and timestamp.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Create and save a new email template.", "expected_result": "The email template is saved successfully and available for future use in the templates section.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Communication"]}}, {"task": "Edit an existing email template and save the changes.", "expected_result": "The edited template is updated correctly and displayed with the changes in the templates section.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "File operation"]}}, {"task": "Verify that the website uses 'cornsilk' as the background color and 'peru' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'cornsilk' and components (such as buttons, cards, headers, etc.) are styled with the color 'peru', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000043", "instruction": "Please implement a short message service platform for sending and managing short messages. The platform should have functionalities for sending short messages, managing user information, configuring policies, and monitoring short message sending situations. Users should be able to send short messages, view short message sending records, configure sending policies, and monitor short message sending situations. Apply azure mist as the background; style all components with dark slate blue.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Real-time Features", "Data Management"]}, "application_type": "Email Clients", "ui_instruct": [{"task": "Attempt to send a short message to a valid phone number.", "expected_result": "The message is sent successfullyand the message appears in the sending records.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Navigate to the \"User Information\" section and update a piece of user information.", "expected_result": "The user information is updated successfully.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Configure a new sending policy by navigating to the \"Configure Policies\" section and filling out the form.", "expected_result": "The policy is saved successfully and the new policy appears in the list of active policies.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "View short message sending records.", "expected_result": "The records display accurately, showing relevant details such as date, time, recipient, and status of each message sent.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Monitor short message sending situations by accessing the dashboard.", "expected_result": "Real-time data and statistics regarding short message sending activities are displayed clearly and accurately on the dashboard.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Verify that the website uses 'azure mist' as the background color and 'dark slate blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'azure mist' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark slate blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000044", "instruction": "Please implement a supply chain traceability website for tracking and verifying the origin and circulation of products with the unique product IDs. The website should have functionalities for product registration, tracking, inquiry, and verification. Users should be able to register products, track the circulation path of products, query the current status of products, and verify the authenticity of products. The website should also have data statistics and analysis functions to help users understand the operation of the supply chain. Define the background as misty rose and components as firebrick.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "Big Data", "Data Visualization"]}, "application_type": "ERP Platforms", "ui_instruct": [{"task": "Test the product registration form by entering valid product details and submitting the form.", "expected_result": "The product is successfully registered in the system, and a confirmation message is displayed with a unique product ID.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Navigate to the product tracking page and enter the unique product ID to track its circulation path.", "expected_result": "The circulation path of the product appears, detailing each location or checkpoint the product has passed through up to the present.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "On the website, use the product inquiry feature to check the current status of an already registered product using its ID.", "expected_result": "The current status of the product is correctly displayed, including relevant details such as location and time.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Verify the authenticity of a product by entering its ID in the verification section.", "expected_result": "The website confirms the authenticity of the product and provides the source information as registered.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Access the data statistics and analysis page and review the displayed metrics.", "expected_result": "The page displays relevant and comprehensive statistics and analysis regarding supply chain operations, such as total products tracked and current circulation statuses.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization", "Details Information"]}}, {"task": "Check the navigation menu across different pages to ensure consistent access to main functionalities (registration, tracking, inquiry, verification, statistics).", "expected_result": "All main functionalities are easily accessible from the navigation menu, and links correctly route to respective pages.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Verify that the website uses 'misty rose' as the background color and 'firebrick' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'misty rose' and components (such as buttons, cards, headers, etc.) are styled with the color 'firebrick', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000045", "instruction": "Please implement a paper cup manufacturing system to manage inventory, production, and sales of paper cups. The system should have functionalities for managing raw materials, finished products, inventory, production, and sales. Users should be able to record and track the inventory, usage, and sales of raw materials and finished products, and generate detailed reports. The system should also have customer management capabilities, including recording customer information, sales history, and sales statistics. Assign light goldenrod to the background and olive drab to the UI elements.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "Big Data"]}, "application_type": "ERP Platforms", "ui_instruct": [{"task": "Navigate to the raw materials management section and add a new raw material to the inventory.", "expected_result": "The new raw material appears in the inventory list with correct details, without any errors, and the user receives a confirmation message indicating successful addition.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Navigate to the sales management section and record a new sale of paper cups.", "expected_result": "The sold quantity is deducted from the finished products inventory, and the sale details are displayed in the sales history with a confirmation message indicating a successful record.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Check the inventory tracking feature to view current inventory levels of raw materials and finished products.", "expected_result": "Accurate and detailed lists showing current quantities of raw materials and finished products with specific data for each item are displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Generate a detailed report on sales history and review its accuracy and completeness.", "expected_result": "The generated report includes all sales transactions with customer details, product information, and sale dates integrated properly.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Data Visualization"]}}, {"task": "Use the customer management functionality to add a new customer and view their information.", "expected_result": "The new customer appears in the customer list with the correct details provided during registration and the system confirms a successful addition.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Details Information"]}}, {"task": "Access the customer sales statistics section and review its summary.", "expected_result": "The statistics page accurately summarizes sales data per customer, displaying correctly calculated total sales and frequency of purchases for each customer.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Test the navigation menu to ensure all sections of the system (inventory, production, sales, and customer management) are accessible from the homepage.", "expected_result": "Each menu item redirects correctly to its respective section without any errors or navigational dead-ends.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'light goldenrod' as the background color and 'olive drab' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light goldenrod' and components (such as buttons, cards, headers, etc.) are styled with the color 'olive drab', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000046", "instruction": "Please implement a hospital management website for managing hospital finances, reports, inventory, and patient information. The website should have financial management functionality, including collecting patient fees and managing hospital finances. The reporting functionality should include inventory reports, patient reports, and financial reports. Employees should be able to submit daily reports to superiors, including detailed information about daily activities. Pharmacy management should include inventory management of medicines. Patient electronic files should include patient name, date of visit, diagnosis, and comments. The website should also have claim formulation, laboratory management, and theater management. Configure the background color to peach puff, with components using indian red.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "Big Data"]}, "application_type": "ERP Platforms", "ui_instruct": [{"task": "Access the patient management section and create a new patient electronic file with the required fields (name, date of visit, diagnosis, and comments).", "expected_result": "The new patient file is saved and can be retrieved later, with all fields correctly stored and displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Navigate to the financial management section and submit a patient fee payment.", "expected_result": "The payment is successfully processed, and the updated financial record reflects the transaction accurately.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Payment", "E-commerce"]}}, {"task": "Generate and view a financial report in the reporting section.", "expected_result": "The financial report accurately displays data consistent with recent transactions and financial entries.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Data Visualization", "Details Information"]}}, {"task": "Submit a daily report as an employee, detailing daily activities in the employee management section.", "expected_result": "The report submission is acknowledged, and the superior assigned receives a notification with the report details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Form Operations"]}}, {"task": "Navigate to the pharmacy management section and update the inventory count for a specific medicine.", "expected_result": "The inventory count is correctly updated and reflected in the system's current stock records.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Create and submit a claim in the claim formulation section.", "expected_result": "The claim is successfully submitted and appears on the claims list with correct details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Access the laboratory management section and record results for a specific patient’s test.", "expected_result": "The test results are stored under the correct patient file and can be retrieved for future reference.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "From the website homepage, navigate to each main section of the site (e.g., finances, inventory, patient information) using the site’s menu.", "expected_result": "Each menu item redirects to the correct section without missing pages or navigation errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Use the inventory reporting feature to generate an inventory report for a specific date range.", "expected_result": "The report accurately reflects inventory levels and movements for the selected period.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Access the theater management section and schedule a new surgery procedure.", "expected_result": "The scheduled procedure is saved to the calendar and can be accessed with correct details such as date, time, and assigned medical staff.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Verify that the website uses 'peach puff' as the background color and 'indian red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'peach puff' and components (such as buttons, cards, headers, etc.) are styled with the color 'indian red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000047", "instruction": "Please implement an e-government system for office management, infrastructure management, procurement management, personnel management, financial management, and decision-making management. The system should have functionalities for office management, infrastructure management, procurement management, personnel management, financial management, and decision-making management. Users should be able to browse related information, submit applications, approve, query status, and perform related operations. The system should also include functions such as leave, middle-level cadres leaving Shenzhen, attendance, and \"five powers\" management, which can design and circulate corresponding forms and processes. Implement light pink for the page background and medium violet red for the elements.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "File Handling"]}, "application_type": "ERP Platforms", "ui_instruct": [{"task": "Navigate to the infrastructure management section and browse through the available information.", "expected_result": "User can view detailed and accurate information related to infrastructure management, with options to further query specific infrastructure details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Fill out and submit a procurement application form.", "expected_result": "The form submits successfully, and a confirmation message is displayed. The application status should be viewable in the user's procurement management section.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Navigate to the leave management section and complete an application for leave.", "expected_result": "User is able to submit a leave application successfully and receive a confirmation of submission. The application appears in the user's leave management history.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "As a manager, review and approve a personnel management request.", "expected_result": "The request is moved to an approved status. The requester is notified of the approval, and it reflects in the personnel management records.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Generation"]}}, {"task": "Perform a query for financial reports within the financial management section.", "expected_result": "The query returns accurate, comprehensive financial information in a timely manner, supporting decision-making processes.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering", "Generation"]}}, {"task": "Initiate a decision-making process and submit it for internal review.", "expected_result": "The process initiates without error, and all involved parties receive a notification for review. The status updates reflect the ongoing process stages accurately.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Verify that the website uses 'light pink' as the background color and 'medium violet red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light pink' and components (such as buttons, cards, headers, etc.) are styled with the color 'medium violet red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000048", "instruction": "Please implement a time attendance system to record employee attendance. The system should have functionalities for employee clocking in and out, and viewing attendance records. Employees should be able to clock in and out, and view their own attendance records, including attendance time and absence time. Administrators should be able to view all employees' attendance records, perform statistics, and analysis. Specify papaya whip as the base color and dark orange for all components.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration"]}, "application_type": "Internal Tools", "ui_instruct": [{"task": "Clock in for the start of a work shift.", "expected_result": "The system records the clock-in time, and confirmation is displayed to the employee on their dashboard.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Clock out at the end of a work shift.", "expected_result": "The system records the clock-out time, and confirmation is displayed to the employee on their dashboard.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "View your personal attendance record.", "expected_result": "The attendance records, including attendance time and any absence time, are accurately displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "View the attendance records of all employees as dministrators.", "expected_result": "A complete list of attendance records for all employees is displayed in the admin panel.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Perform a statistical analysis of employee attendance.", "expected_result": "The system generates and displays statistical data regarding overall attendance trends without errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization", "Details Information"]}}, {"task": "Verify that the website uses 'papaya whip' as the background color and 'dark orange' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'papaya whip' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark orange', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000049", "instruction": "Please implement a barber shop management website for managing barbers and services. The website should have functionalities for adding barbers, services, and sending WhatsApp notifications. Users should be able to browse barbers and services, add new barbers and services, and send notifications to clients. Style the layout with snow in the background and dim gray for the interface.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration"]}, "application_type": "Internal Tools", "ui_instruct": [{"task": "Add a new barber using the provided form with valid information.", "expected_result": "The barber should be successfully added, and a confirmation message should appear. The new barber should be visible in the barber list.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Add a new service using the provided form with valid details.", "expected_result": "The service should be successfully added, and a confirmation message should appear. The new service should be listed under available services.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Navigate through the website from the dashboard to the barbers and services section using a navigation menu.", "expected_result": "Each navigation action should lead to the correct page without errors, maintaining a consistent and intuitive navigation experience.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'snow' as the background color and 'dim gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'snow' and components (such as buttons, cards, headers, etc.) are styled with the color 'dim gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000050", "instruction": "Please implement a health survey website for women to fill out and submit health information. The website should have functionalities for filling out the survey, and submitting information. Users can fill out the relevant survey, and submit their information. The system will automatically collect the information and provide data management, permission management, data review, and reporting functions. Use whitesmoke as the default background and dark cyan for component styling.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Data Management"]}, "application_type": "Internal Tools", "ui_instruct": [{"task": "Navigate to the survey page from the homepage to fill out a health information survey.", "expected_result": "The user is successfully directed to the survey page from the homepage, with the proper survey loaded relevant to women's health.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Navigation"]}}, {"task": "Fill out the health information survey with sample data and attempt to submit it.", "expected_result": "The survey data is successfully submitted, and a confirmation message is displayed to the user indicating successful submission.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Check that the survey form validates inputs and provides error messages for incomplete or incorrectly formatted entries.", "expected_result": "Appropriate error messages are displayed for incomplete fields or incorrect data formats, preventing form submission until resolved.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Test the data management functionality by accessing the submitted information section.", "expected_result": "Submitted survey information is available in the data management section, presented in an organized and user-friendly manner.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Review a generated report based on submitted survey data to ensure accurate data representation.", "expected_result": "The report accurately reflects the survey data with relevant insights and is easily understandable to users with permission to view it.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Data Display Testing"]}}, {"task": "Verify that the website uses 'whitesmoke' as the background color and 'dark cyan' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'whitesmoke' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark cyan', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000051", "instruction": "Please implement a recruitment website for hiring drivers and posting job listings. The website should have functionalities for user registration, job posting, job application, and contact form. Users should be able to register and create profiles, apply for jobs, and manage their contact information. Clients should be able to view their active job postings. The website should include pages such as home, about us, clients, drivers, jobs, and contact. Design the site using white as the background and navy for content blocks.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Authentication", "E-commerce"]}, "application_type": "Job Search Platforms", "ui_instruct": [{"task": "Test user registration form submission.", "expected_result": "A new user profile is created successfully, and a confirmation message is displayed indicating registration completion.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows"]}}, {"task": "Test job posting functionality for clients.", "expected_result": "A new job listing is created and appears in the list of active job postings with correct details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce", "Communication"]}}, {"task": "Verify that users can apply for a job listing.", "expected_result": "The user's application is submitted successfully, and confirmation is displayed to the user.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Check that users can update their contact information.", "expected_result": "Changes to the contact information are saved, and a confirmation message is displayed to the user.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Validate that the contact form can be submitted.", "expected_result": "The contact form submission succeeds, and a thank you message is displayed to the user.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Confirm navigation from the home page to the 'About Us' page.", "expected_result": "Clicking the 'About Us' link takes the user to the 'About Us' page without any errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify accessibility of the home page.", "expected_result": "The home page is accessible.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Check the ability for clients to view all their active job postings.", "expected_result": "The client can see a list of all active job postings with correct and up-to-date information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'white' as the background color and 'navy' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'white' and components (such as buttons, cards, headers, etc.) are styled with the color 'navy', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000052", "instruction": "Please implement a blue-collar job site that connects blue-collar workers with employers. The website should allow users to create profiles, including name, contact information, skills and qualifications, email address, and photos. Users can browse and search job listings, including construction workers, plumbers, electricians, and more. Apply ivory for the layout background and forest green for interactive elements.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "E-commerce", "Authentication"]}, "application_type": "Job Search Platforms", "ui_instruct": [{"task": "Verify that a user can update their profile information (e.g., skills, contact details).", "expected_result": "Updates are saved correctly and reflected in the user's profile without errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Check the job search functionality by searching for \"electrician\" positions.", "expected_result": "Search results display relevant job listings for electrician positions only, including the job title, employer, and location.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Confirm that employers can post a new job listing with all required information (job description, requirements, contact details).", "expected_result": "Job listing is successfully created and appears in the job listings with all entered details correctly displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Ensure the navigation links (home, profiles, job postings) are working correctly.", "expected_result": "Clicking on each navigation link redirects the user to the appropriate page without errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test that users can view detailed job descriptions by clicking on a job listing.", "expected_result": "Detailed job information is displayed, including job description, requirements, and employer contact details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Verify that the website uses 'ivory' as the background color and 'forest green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ivory' and components (such as buttons, cards, headers, etc.) are styled with the color 'forest green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000053", "instruction": "Please implement an internship portal website that connects students with companies offering internship opportunities. The website should have a student panel and a company panel, where students can browse and apply for internships, and companies can post internship positions. The website should also be optimized for speed, navigation, user interface, and user experience. Choose mint cream for the background; set all component colors to teal.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "E-commerce", "Authentication"]}, "application_type": "Job Search Platforms", "ui_instruct": [{"task": "Test the internship browsing functionality on the student panel.", "expected_result": "Students can view a list of available internships, with each listing displaying consistent and correct company information, position description, and application deadline.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Filtering"]}}, {"task": "Test the internship application submission functionality from the student panel.", "expected_result": "Students can successfully apply for a chosen internship, receive a confirmation notification on the website, and an email acknowledgment of their application.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Test the internship posting functionality on the company panel.", "expected_result": "Companies can successfully post a new internship opportunity, which becomes immediately visible and accurately listed on the student browsing page.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Form Operations"]}}, {"task": "Test the cross-linking navigation between the student and company panels.", "expected_result": "Users can switch between the student and company panels with intuitive navigation elements and without encountering any broken links or navigation errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'mint cream' as the background color and 'teal' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'mint cream' and components (such as buttons, cards, headers, etc.) are styled with the color 'teal', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000054", "instruction": "Please implement a high-performance sports recruitment platform that connects athletes and sports organizations. The platform should have functionalities for athlete registration, job posting, job application, and message notification. Users should be able to log in, browse job listings, apply for jobs of interest, and receive relevant notifications. Sports organizations should be able to post jobs, and communicate with athletes. Set ghost white as the body background and use slate gray for the UI.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Authentication", "Real-time Features"]}, "application_type": "Job Search Platforms", "ui_instruct": [{"task": "Attempt to register as an athlete on the platform using the provided registration form.", "expected_result": "The system successfully creates a new athlete account and displays a confirmation message.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows"]}}, {"task": "Log in as a sports organization using valid credentials.", "expected_result": "The system grants access to the organization dashboard without any errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Post a new job listing as a sports organization.", "expected_result": "The job listing appears in the job listings page, accurately reflecting the details entered.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Apply for a job listing as an athlete.", "expected_result": "A confirmation message appears confirming the application submission, and the application is logged in the athlete's account history.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows", "Communication"]}}, {"task": "Send a message from a sports organization to a registered athlete through the platform's communication feature.", "expected_result": "The athlete receives the message promptly, and a notification is displayed indicating a new message was received.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Verify that the website uses 'ghost white' as the background color and 'slate gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ghost white' and components (such as buttons, cards, headers, etc.) are styled with the color 'slate gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000055", "instruction": "Please implement a website for the Global Institute of Information Security to display courses and provide online enrollment functionality. The website should have functionalities such as course catalog, chatbot integration, contact form, and certification pathways. Users should be able to browse courses, view course details, enroll online, and contact the institute. Style all pages with a lavender background and indigo components.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "AI Integration", "Form Systems"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Navigate to the course catalog page.", "expected_result": "The course catalog page displays a list of available courses, complete with titles, descriptions, and available batches.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Click on a course from the course catalog to view details.", "expected_result": "The course detail page opens, displaying comprehensive information about the selected course, including the syllabus, batch scheduling, and certification pathways.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Test the online enrollment functionality by attempting to enroll in a course.", "expected_result": "The enrollment form is accessible, and submitting valid information successfully enrolls the user, triggering a confirmation message or email.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Check the chatbot integration functionality by initiating a chat session.", "expected_result": "The chatbot responds promptly and is able to answer basic inquiries about the institute's courses, timetables, and enrollment process.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Access and fill out the contact form.", "expected_result": "The contact form allows the user to submit their name, email, and message, with successful submission confirmed by an acknowledgment message.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Validate the content on the certification pathways section.", "expected_result": "The section accurately describes the certification pathways available, aligning with the courses offered and providing clear, relevant details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'lavender' as the background color and 'indigo' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lavender' and components (such as buttons, cards, headers, etc.) are styled with the color 'indigo', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000056", "instruction": "Please implement an online learning platform for data science that provides Python data science courses. The platform should have functionalities for browsing courses, learning courses, submitting assignments, and querying grades. Users should be able to browse and select Python data science courses of interest, learn course content, submit assignments, and query their own learning grades. Use honeydew in the background layer and dark olive green for the component layer.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Authentication", "AI Integration"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Navigate to the course browsing section.", "expected_result": "The user can view a list of available Python data science courses with titles, brief descriptions, and enrollment options.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Select a specific Python data science course to view more details.", "expected_result": "The course detail page opens, displaying comprehensive information about the course, including the syllabus, instructor, and enrollment option.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Enroll in a Python data science course.", "expected_result": "The enrollment is successful, and the course appears in the user's \"My Courses\" section.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "E-commerce"]}}, {"task": "Access and start learning a course module.", "expected_result": "The course module loads properly with all learning materials accessible, including text, images, and videos, if applicable.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Communication"]}}, {"task": "Submit an assignment for a course module.", "expected_result": "The system confirms the assignment submission and it is reflected in the \"Submissions\" section for the specific course.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Query grades for the completed assignments in a course.", "expected_result": "A page or section loads displaying grades for each submitted assignment with clear numerical or percentage scores.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Data Display Testing"]}}, {"task": "Verify that the website uses 'honeydew' as the background color and 'dark olive green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'honeydew' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark olive green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000057", "instruction": "Please develop a student portal website for registration and management of student information. The website should have user registration and profile management features, allowing students to input and manage personal details, qualifications, and career preferences. The website should also have an advanced matching algorithm that matches students with training providers based on criteria such as qualifications, location, field of study, and career interests. Additionally, the website should streamline the application process with an intuitive interface, allowing students to easily apply for programs. Training providers should also be able to access student information based on predefined criteria to enable direct communication and attraction of students to their skills development programs. Establish azure as the main background and midnight blue for the controls.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "AI Integration"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Test the student registration functionality.", "expected_result": "Successful registration should lead to the creation of a new student profile, and confirmation should be displayed on the screen. The profile should store personal details, qualifications, and career preferences.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Verify the profile management feature by updating personal details in the student profile.", "expected_result": "The updated details should be saved successfully, and a confirmation message should be displayed. Reopening the profile should reflect the changes made.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Check the advanced matching algorithm by inputting student qualifications, location, field of study, and career interests.", "expected_result": "The system should display a list of matching training providers based on the input criteria, with clear differentiation between matching and non-matching providers.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering", "Form Operations"]}}, {"task": "Validate the application process by applying for a program through the portal.", "expected_result": "The process should be intuitive and guide the student step-by-step towards application submission. A confirmation message should be displayed after successful application submission.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows", "Communication"]}}, {"task": "Test the training provider's access by attempting to view student information based on predefined criteria.", "expected_result": "Training providers should have access to student profiles that match their predefined criteria, with clear options to initiate communication with eligible students.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering", "Authentication Flows"]}}, {"task": "Inspect the website's navigation functionality.", "expected_result": "All navigation links should be working correctly, leading to the appropriate sections of the website without broken links or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Review the direct communication feature between training providers and students.", "expected_result": "Training providers should be able to directly communicate with students via the portal, with a clear and straightforward method for sending messages or inquiries to students.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Verify that the website uses 'azure' as the background color and 'midnight blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'azure' and components (such as buttons, cards, headers, etc.) are styled with the color 'midnight blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000058", "instruction": "Please implement a web application for one-to-one coaching sessions to match coaches and users. The application should have functionalities such as personality assessment, user profiles, coaching and mentorship matching, scheduling and session management, and goal setting and progress tracking. Users should be able to complete a personality assessment, create and manage their profiles, search for and select suitable coaches, schedule coaching sessions, and set and track goals. Set the background to beige, and apply saddle brown to components.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Real-time Features", "AI Integration"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Assess the personality assessment functionality by completing the full assessment.", "expected_result": "The system should display an assessment summary or results, and these results should be saved to the user’s profile.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Examine the profile creation feature by updating the user profile information.", "expected_result": "Updated profile details should be saved correctly and displayed on the user profile page.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows"]}}, {"task": "Check the coaching and mentorship matching feature by searching for available coaches.", "expected_result": "The system should list suitable coaches based on user preferences and assessment results.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Filtering"]}}, {"task": "Test scheduling a new coaching session with a selected coach.", "expected_result": "The session should be added to the user’s and coach’s calendars, and both parties should receive a confirmation notification.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations", "Communication"]}}, {"task": "Evaluate goal-setting and progress tracking by creating and updating a personal goal.", "expected_result": "The goal should be saved successfully, and progress updates should reflect accurately in the system.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Verify that the website uses 'beige' as the background color and 'saddle brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'beige' and components (such as buttons, cards, headers, etc.) are styled with the color 'saddle brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000059", "instruction": "Please implement a virtual study group website where users can create or join study groups, share resources, and collaborate on projects. The website should have functionalities for creating and joining groups, sharing resources, and collaborating on projects. Users should be able to join groups, download resources, and participate in project discussions. The website should also have a personal center where users can view their personal information. Configure all backgrounds with alice blue and all components with steel blue.", "Category": {"primary_category": "User Interaction", "subcategories": ["Real-time Features", "E-commerce", "Authentication"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Check the functionality of joining an existing study group.", "expected_result": "User should be able to join a study group successfully, and it should be reflected in their personal center under “My Groups”.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Communication"]}}, {"task": "Evaluate the download functionality for shared resources.", "expected_result": "The resource should download successfully to the user's device without errors, and the correct file should be downloaded.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Test the collaboration feature for participating in project discussions within a group.", "expected_result": "User should be able to post comments or updates in the project discussion section, and they should be viewable by other group members.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Ensure users can view their profile and update personal information within the personal center.", "expected_result": "Users should be able to see their current profile information, update it, and receive a confirmation message that changes have been saved.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Verify that the website uses 'alice blue' as the background color and 'steel blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'alice blue' and components (such as buttons, cards, headers, etc.) are styled with the color 'steel blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000060", "instruction": "Please implement an adult vocabulary learning website that includes a variety of quizzes and word games, such as crossword puzzles, unjumble letters, finding synonyms and antonyms, flashcards, and fill-in-the-blank. The website should have a dashboard that displays a progress summary. A set of 10 new words should be taught every week, and users should be able to choose an avatar and play a simple game while waiting in the waiting room. The website should include a home page, 5 activity pages, a dashboard, and blog pages. Assign light gray to body backgrounds and dark red to main components.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Data Visualization", "AI Integration"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Navigate to each of the 5 activity pages and verify that each page correctly begins an activity (crossword puzzle, unjumble letters, etc.).", "expected_result": "Each activity page loads a distinct word game or quiz, relevant to vocabulary learning.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce", "Communication"]}}, {"task": "On the dashboard, verify that the progress summary updates after completing a word game.", "expected_result": "The dashboard displays updated progress statistics reflecting the recently completed game.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Access the weekly new words section and verify the display of exactly 10 new words.", "expected_result": "Ten new vocabulary words are displayed, aligning with the current week's learning schedule.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Validate the functionality of selecting and setting an avatar in the waiting room.", "expected_result": "The selected avatar is visibly updated and persists through page changes and session reloads.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation", "UI Consistency"]}}, {"task": "Test navigation from the home page to the blog and back to ensure accessibility and consistent navigation.", "expected_result": "Both transitions occur smoothly without errors, maintaining user session state.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Play the simple game available in the waiting room.", "expected_result": "The game ends successfully.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'light gray' as the background color and 'dark red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light gray' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000061", "instruction": "Please develop a children's recycling game website to educate kids on proper waste recycling. The game should include competitive elements such as a leaderboard to keep kids engaged and motivated. The game should use a cartoon-style visual design to make it visually appealing to children. Kids should be able to play the game, receive feedback, learn how to correctly sort waste into the corresponding containers, and receive rewards and recognition through the game. Use seashell for container backgrounds and crimson for component visuals.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "AI Integration", "Real-time Features"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Test the functionality of starting a new game.", "expected_result": "The game should initialize with an introductory screen displaying instructions on how to play, including sorting waste into correct containers.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Check the leaderboard feature to ensure it displays scores correctly.", "expected_result": "The leaderboard should show a list of players with their respective scores in descending order without any visual errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Assess the cartoon-style visual design for appropriateness.", "expected_result": "The visuals should be colorful, child-friendly, and consistent throughout the website, with no inappropriate or non-cartoonish elements present.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}, {"task": "Test the feedback system for incorrect sorting.", "expected_result": "Placing a waste item in the wrong container should trigger a gentle correction prompt explaining the correct choice without being discouraging.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Verify the awarding of rewards and recognition within the game.", "expected_result": "After correctly sorting a designated number of items or reaching a specific score, the game should display a reward screen or badge to acknowledge the player’s achievement.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Generation"]}}, {"task": "Verify that the website uses 'seashell' as the background color and 'crimson' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'seashell' and components (such as buttons, cards, headers, etc.) are styled with the color 'crimson', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000062", "instruction": "Please implement a DMV practice test website to help users practice for their driver's license exam. The website should have features such as a practice question bank, simulated exams, and error analysis. Users should be able to select practice questions, take simulated exams, and view error analysis and exam scores. Set page background to floral white; color all components with dark goldenrod.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "AI Integration", "Data Management"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Check the accessibility of the practice question bank.", "expected_result": "Users should be able to easily access and view a list of questions in the practice question bank without encountering any errors or delays.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Communication", "File operation"]}}, {"task": "Test the question selection process from the practice question bank.", "expected_result": "Users should be able to successfully select practice questions from the question bank, and the selected questions should be clearly indicated.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Form Operations"]}}, {"task": "Validate the functionality of the simulated exam feature.", "expected_result": "Users should be able to start a simulated exam, complete it by answering all questions, and the exam should conclude with a submitted score.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Form Operations"]}}, {"task": "Ensure the error analysis feature's availability post-exam.", "expected_result": "Upon completing a simulated exam, users should be able to view an error analysis page that highlights incorrect answers and provides explanations or references.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Assess the display of exam scores.", "expected_result": "After a simulated exam is completed, users should see a score display that accurately reflects their performance on that specific exam.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Verify the website's navigation flow.", "expected_result": "Users should be able to navigate seamlessly through all sections of the website (e.g., login, practice questions, simulated exams) without encountering broken links or dead ends.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'floral white' as the background color and 'dark goldenrod' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'floral white' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark goldenrod', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000063", "instruction": "Please implement a website that displays Canadian nutrition facts labels to help users understand food nutrition information. The website should have a product search function, where users can input food names or keywords (such as apple) to search for related nutrition information. The website should also have a nutrition analysis function, where users can input food ingredients (such as chicken, rice, broccoli) and serving sizes to calculate their nutritional value. Additionally, the website should provide a packaging design function, where users can design their own food packaging according to Canadian regulations. Define background as linen; define components with maroon.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "Data Visualization", "Media Display"]}, "application_type": "News and Information Sites", "ui_instruct": [{"task": "Search for \"apple\" using the product search function.", "expected_result": "The website returns relevant nutrition facts labels for \"apple,\" displaying accurate and complete nutritional information as per Canadian standards.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Enter \"chicken, rice, broccoli\" as ingredients with serving sizes into the nutrition analysis function.", "expected_result": "The website calculates and displays the nutritional value for the provided ingredients and serving sizes, reflecting accurate values consistent with Canadian nutrition guidelines.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Use the packaging design function to initiate a new food package design.", "expected_result": "The user is able to open and start a new packaging design session, encountering options that allow compliance with Canadian regulations.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Component Styling"]}}, {"task": "Navigate to the nutrition analysis page and verify the presence of field labels and input boxes.", "expected_result": "All necessary field labels and input boxes are present and clearly instruct users on what information is required for nutrition analysis.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Attempt to search for a non-existent food item like \"xyz123\" in the product search function.", "expected_result": "The website should handle it gracefully by displaying a message indicating there are no results found for \"xyz123.\"", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Check the website for keyboard navigability by tabbing through the homepage.", "expected_result": "Users can navigate through all interactive elements using the keyboard alone, and all elements are focusable.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Verify that the website uses 'linen' as the background color and 'maroon' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'linen' and components (such as buttons, cards, headers, etc.) are styled with the color 'maroon', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000064", "instruction": "Please implement a news blog website for the shipping industry to publish news and company information. The website should have sections for news, company profiles, and events. Users should be able to browse news, company information, and events, and subscribe to newsletters. The website should have a backend management system that allows administrators to manage ad spaces. Implement styling with old lace for the background and rosy brown for components.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "Static Page Generation", "Data Visualization"]}, "application_type": "News and Information Sites", "ui_instruct": [{"task": "Navigate to the news section and verify the presence of recent articles.", "expected_result": "The news section should display a list of current articles related to the shipping industry, each with a title, publication date, and a brief summary.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Access a company profile from the company information section.", "expected_result": "The selected company profile should open up to display detailed information, including company history, key executives, and contact information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Attempt to subscribe to the newsletter using a valid email address.", "expected_result": "A confirmation message should appear indicating successful subscription to the newsletter.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Go to the events section and view details of a listed event.", "expected_result": "The event details should display comprehensive information such as date, time, location, and a brief description of the event.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Test the main navigation bar links to ensure they redirect to correct sections.", "expected_result": "Clicking on each navigation link should take the user to the correct section (news, company profiles, events) without errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify ad space management in the backend by placing an advertisement and checking its display on the main site.", "expected_result": "The placed advertisement should appear in the designated ad space on the website.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization", "Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'old lace' as the background color and 'rosy brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'old lace' and components (such as buttons, cards, headers, etc.) are styled with the color 'rosy brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000065", "instruction": "Please implement an agriculture-related website for displaying and managing agricultural information. The website should have functionalities for browsing agricultural news, viewing farm product information, and checking weather forecasts. Users should be able to browse agricultural-related news, view different types of farm product information, check local weather forecasts, and perform searches and filters. Apply theme using light cyan as background and cadet blue for elements.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "Data Visualization", "Media Display"]}, "application_type": "News and Information Sites", "ui_instruct": [{"task": "Browse agricultural-related news on the homepage.", "expected_result": "News articles displayed are relevant to agriculture and are up-to-date, with the titles and content clearly visible.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "View detailed information about a specific farm product.", "expected_result": "Detailed information page includes product name, description, price, and availability, all clearly presented.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Check the local weather forecast from the main navigation menu.", "expected_result": "The weather forecast displayed is accurate for the user's detected location, showing up-to-date weather conditions.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Perform a search for a specific agricultural topic using the search function.", "expected_result": "Search results are relevant to the query and listed in order of relevance, with a clear link to each result.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Apply a filter to display only news articles about crop production.", "expected_result": "Filtered news articles are shown, all related to crop production, with no unrelated content displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Verify that the website uses 'light cyan' as the background color and 'cadet blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light cyan' and components (such as buttons, cards, headers, etc.) are styled with the color 'cadet blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000066", "instruction": "Please implement a real-time culinary guide application to display restaurant and recipe information. The application should have functionalities for browsing restaurants, searching recipes, viewing reviews and ratings, and more. Users should be able to browse nearby restaurants, search for specific recipes, view other users' reviews and ratings, and add their own reviews and ratings. Color the background using lemon chiffon and set component styles to chocolate.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "Data Visualization", "Media Display"]}, "application_type": "News and Information Sites", "ui_instruct": [{"task": "Browse the list of nearby restaurants from the homepage.", "expected_result": "A list of restaurants near the user's current location is displayed, including names, addresses, and a means to get more details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Perform a search for a specific recipe using the search bar.", "expected_result": "Relevant recipes matching the search query are displayed, with each entry showing a basic description and an option to view more details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "View a detailed page of a selected restaurant to see its reviews and ratings.", "expected_result": "Detailed restaurant information is displayed, including user reviews and average ratings.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Submit a review and rating for a restaurant you've previously visited.", "expected_result": "The new review and rating are successfully added and displayed under the selected restaurant's reviews.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Navigate through the site's main sections (home, restaurants, recipes, reviews) using the main menu.", "expected_result": "Each section loads correctly with relevant and updated content, matching the menu item's title.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'lemon chiffon' as the background color and 'chocolate' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lemon chiffon' and components (such as buttons, cards, headers, etc.) are styled with the color 'chocolate', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000067", "instruction": "Please implement a family event portal website for publishing and storing obituaries, funeral arrangements, and multimedia memories. The website should have functionalities for obituary publishing, mortuary list, condolences, and statistics. Users should be able to publish and manage their own obituaries and funeral arrangements, view and leave messages on others' obituaries, and view statistical analysis. Use cornsilk for the outer layout and peru for UI blocks.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "Data Visualization", "API Integration"]}, "application_type": "News and Information Sites", "ui_instruct": [{"task": "Navigate to the obituary publishing section and submit a new obituary with a title, content, and image.", "expected_result": "The obituary should be successfully published, appear on the user's dashboard, and be accessible to other users from the main obituaries page.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "File operation"]}}, {"task": "Look up the list of local mortuaries available on the website.", "expected_result": "The list should display comprehensive details about each mortuary, including name, location, and contact information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Leave a condolence message on an existing obituary.", "expected_result": "The message should be successfully posted under the selected obituary and visible to other users.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Check the statistics page for the statistical analysis of obituary-related data.", "expected_result": "The page should display clear and relevant statistics, such as the number of obituaries published, the most recent obituaries, or any trend analysis available.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization", "Details Information"]}}, {"task": "Navigate through the website using the main navigation menu.", "expected_result": "Each link in the navigation menu should lead to the appropriate section or page, and the navigation menu should remain consistent across all pages.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'cornsilk' as the background color and 'peru' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'cornsilk' and components (such as buttons, cards, headers, etc.) are styled with the color 'peru', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000068", "instruction": "Please implement an environmental warning system website to display real-time weather and air quality data. The website should have a real-time update function, displaying the air quality index (AQI) for the past two weeks, and allowing users to compare pollution and air quality changes. Users should be able to browse current weather and air quality data, including temperature, humidity, and gas sensor data. Set primary background to azure mist and elements to dark slate blue.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}, "application_type": "News and Information Sites", "ui_instruct": [{"task": "Verify that the website loads the real-time weather data on the homepage.", "expected_result": "The homepage should display current weather information, including temperature, humidity, and gas sensor data, immediately upon loading without the need for a page refresh.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Check if the website updates the air quality index (AQI) data in real-time.", "expected_result": "The AQI information should refresh automatically on the site without manual page reloads and reflect changes accurately as per the latest available data.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Validate the ability to view historical air quality index (AQI) data for the past two weeks.", "expected_result": "Users should be able to access a time series or historical graph/chart that shows AQI data for each of the last 14 days.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Test the functionality for comparing changes in pollution and air quality over a specified period.", "expected_result": "Users should be able to select two different dates within the last two weeks and see a visual comparison of the AQI data between these two dates.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Ensure that users can navigate to a section that displays current weather information.", "expected_result": "There should be a clear navigation path (e.g., a menu link or button) that directs users to the section showing the latest weather details, without encountering navigation issues.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'azure mist' as the background color and 'dark slate blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'azure mist' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark slate blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000069", "instruction": "Please implement a health blog website for publishing health-related articles and promoting healthy lifestyles. The website should have functionalities for publishing articles, commenting, searching, and categorizing. Users should be able to browse and search articles, post comments, and follow specific topics. Choose misty rose for global background and firebrick for all components.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "Data Visualization", "Static Page Generation"]}, "application_type": "Personal Blog Sites", "ui_instruct": [{"task": "Navigate to the homepage of the health blog website and check for the presence of a search bar.", "expected_result": "The homepage displays a functional search bar prominently, enabling users to input search queries.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Perform a search for a specific health topic using the search bar.", "expected_result": "The search results page displays articles related to the inputted health topic, with titles and short descriptions that match the search query.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Access a specific article from the search results and verify the presence of a comment section.", "expected_result": "The article page contains a comment section where users can read existing comments and write their own.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Communication"]}}, {"task": "Post a comment on an article and check the comment's appearance in the comment section.", "expected_result": "The posted comment appears in the comment section immediately after submission, displaying correctly with the user's input.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication", "Data Display Testing"]}}, {"task": "Browse the category section to view available health topics.", "expected_result": "The categories are clearly listed, allowing the user to select and view articles associated with each category.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Follow a specific health topic or category from the category list.", "expected_result": "The website confirms that the user is now following the selected topic, and it is added to a personal list or notification service.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'misty rose' as the background color and 'firebrick' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'misty rose' and components (such as buttons, cards, headers, etc.) are styled with the color 'firebrick', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000070", "instruction": "Please implement a poetry blog website for displaying and sharing poetry content. The website should have functionalities for browsing poetry, searching poetry, posting poetry, and commenting on poetry. Users should be able to browse different types of poetry, search for specific poetry, post their own poetry, and comment on others' poetry. Apply light goldenrod for layout; use olive drab for buttons and cards.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "Static Page Generation", "User Interaction"]}, "application_type": "Personal Blog Sites", "ui_instruct": [{"task": "Verify the poetry browsing functionality.", "expected_result": "The user can access a list of poetry, with each entry displaying the title and author clearly.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Test the search function by searching for a specific poem title.", "expected_result": "The search returns results that include the poem with the matching title and no unrelated results.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Test the process of posting new poetry.", "expected_result": "The user can fill out a form to input poetry title, content, and tags, then submit it successfully; the new poem should appear on the website.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication", "Form Operations"]}}, {"task": "Test the functionality for posting a comment on an existing poem.", "expected_result": "The user can submit a comment, and it appears under the poem along with the user's name and timestamp.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Verify that users can navigate to different types of poetry categories.", "expected_result": "Clicking on a category correctly filters and displays poems belonging to that category only.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'light goldenrod' as the background color and 'olive drab' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light goldenrod' and components (such as buttons, cards, headers, etc.) are styled with the color 'olive drab', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000071", "instruction": "Please implement a personal portfolio website to showcase design works. The website should have functionalities for showcasing works about the designer, and contact information. Users should be able to browse the designer's portfolio, learn about the designer's background and experience, and get in touch with the designer through contact information. Configure your theme with peach puff as background and indian red as component color.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Media Display"]}, "application_type": "Personal Portfolio Sites", "ui_instruct": [{"task": "Verify the navigation to the portfolio section.", "expected_result": "Clicking the \"Portfolio\" link in the navigation menu should direct the user to the portfolio section, where multiple design works are displayed correctly.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Validate the content of the \"About\" page.", "expected_result": "The \"About\" page should correctly provide detailed information about the designer's background and experience.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Test the contact form submission.", "expected_result": "Submitting the contact form with valid inputs should display a success message indicating the message was sent successfully.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Ensure the visibility of contact information.", "expected_result": "The designer’s contact information (like email or phone number) should be clearly visible and accessible on at least one page of the website.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Verify navigation to the \"About\" section.", "expected_result": "Clicking the \"About\" link in the navigation menu should take the user to the \"About\" page with relevant details about the designer.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'peach puff' as the background color and 'indian red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'peach puff' and components (such as buttons, cards, headers, etc.) are styled with the color 'indian red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000072", "instruction": "Please create a comprehensive CV website to display personal information and work experience. The website should have functionalities for displaying personal information, work experience, skills, education background, and projects. Users should be able to browse the CV, view work experience, understand skills and education background, and showcase personal projects. Use a light pink background and apply medium violet red to the UI components.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Data Visualization"]}, "application_type": "Personal Portfolio Sites", "ui_instruct": [{"task": "Navigate to the 'Personal Information' section of the website.", "expected_result": "The section should display accurate personal information such as name, contact details, and a summary description, consistent with a CV layout.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Click on the 'Work Experience' tab or section to view detailed work experiences.", "expected_result": "The documented work experience should list past job titles, employers, dates of employment, and key responsibilities or achievements clearly and accurately.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Access the 'Skills' section from the main navigation.", "expected_result": "The 'Skills' section should present a list of skills relevant to the CV, formatted in a clear and readable manner, emphasizing proficiency levels if applicable.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Open the 'Education' section to review the educational background.", "expected_result": "The section should accurately depict educational qualifications, including institution names, degrees obtained, and dates of attendance, presented in a logical order.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Select the 'Projects' section from the main menu to view personal projects.", "expected_result": "Each project should have a title, a brief description, and any relevant links or media, with the presentation being clear and informative.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Use the main navigation to move between all sections (Personal Information, Work Experience, Skills, Education, Projects).", "expected_result": "Navigation should be smooth and intuitive, with all links functional and correctly leading to their designated sections.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'light pink' as the background color and 'medium violet red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light pink' and components (such as buttons, cards, headers, etc.) are styled with the color 'medium violet red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000073", "instruction": "Please implement a link tree website for displaying and managing links. The website should have functionalities for adding, editing, and deleting links. Users should be able to create and manage their own link tree, including adding new links, editing existing links, deleting unnecessary links, and sharing their link tree with others through link tree's shareable link. Set overall background to papaya whip, then style components with dark orange.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "File Handling"]}, "application_type": "Personal Portfolio Sites", "ui_instruct": [{"task": "Test the link addition functionality by adding a new link to the user’s link tree.", "expected_result": "The newly added link appears in the user's link tree with the inputted title and URL.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Test the link editing functionality by modifying the title and URL of an existing link in the user’s link tree.", "expected_result": "The link displays updated information in the link tree after saving changes.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "File operation"]}}, {"task": "Test the link deletion functionality by deleting an existing link from the user’s link tree.", "expected_result": "The link is removed from the link tree, and there is no residual data displayed regarding the deleted link.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Test the sharing functionality by copying the link tree's shareable link.", "expected_result": "The shareable link is copied to the clipboard without errors, enabling sharing with others.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Test the form validation by attempting to add a new link with incomplete fields.", "expected_result": "A validation error message is displayed, preventing the user from adding the link until all required fields are completed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Test website navigation by navigating between the home page, link tree dashboard, and user profile.", "expected_result": "Each navigation click takes the user to the correct page, without any errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'papaya whip' as the background color and 'dark orange' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'papaya whip' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark orange', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000074", "instruction": "Please create a biography website to display a person's life and achievements. The website should have functionalities to display basic information, life experiences, achievements, and honors. Users should be able to browse biographies, view detailed information, and search for related content. The website should have a search function, allowing users to quickly find relevant information. Assign snow as the background color and apply dim gray to all elements.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Data Visualization"]}, "application_type": "Personal Portfolio Sites", "ui_instruct": [{"task": "Navigate to the homepage and verify the presence of basic information about the person.", "expected_result": "The homepage should display the person's full name, birthdate, and a summary of their life and achievements.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Click on the \"Life Experiences\" section link in the main navigation menu.", "expected_result": "The user is directed to a page detailing the person's life experiences, which should include a timeline or descriptive list of key life events.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Access the \"Achievements and Honors\" section via the navigation menu.", "expected_result": "The page should list the person's key achievements and honors in a chronological or categorized format, with corresponding dates or context.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Use the search function to look up a specific keyword related to the person's biography (e.g., \"Nobel Prize\").", "expected_result": "The search results should display relevant sections or pages containing the keyword, enabling easy access to detailed information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Check the navigation flow to ensure users can easily move between \"Home,\" \"Life Experiences,\" \"Achievements,\" and \"Search\" sections.", "expected_result": "All navigation links should be functional, allowing seamless transitions between different sections without errors or broken links.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'snow' as the background color and 'dim gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'snow' and components (such as buttons, cards, headers, etc.) are styled with the color 'dim gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000075", "instruction": "Please implement a webpage to showcase team projects and skills, including team introduction, project showcase, skill showcase, and contact information. Users should be able to browse team information, view project cases, understand team skills, and contact the team through the contact information. Initialize the background color with whitesmoke and component color with dark cyan.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Data Visualization"]}, "application_type": "Personal Portfolio Sites", "ui_instruct": [{"task": "Verify that the team introduction section is present and displays correctly on the homepage.", "expected_result": "The team introduction section should be easily visible and provide an accurate overview of the team, including names and roles.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Check that each project in the project showcase section can be opened and viewed in detail.", "expected_result": "Clicking on a project should lead to a detailed view with a description, images, or other media explaining the project comprehensively.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Test the skill showcase section for accurate display and content relevance.", "expected_result": "The skill showcase should list the skills in a clear and organized manner, and each skill should reflect the team's expertise without any redundancy or irrelevant skills.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Validate the functionality of the contact information section.", "expected_result": "The contact section should correctly display a form or contact details that enable users to get in touch with the team via email or phone.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Ensure that the navigation menu links to all major sections (team introduction, project showcase, skills, and contact information).", "expected_result": "Each link in the navigation menu should lead to the correct section of the webpage without any dead links or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test the form submission in the contact section for proper functionality.", "expected_result": "Upon form submission, a success message should appear, indicating the form was submitted successfully, or errors should be highlighted to guide the user on what needs correction.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Verify that the website uses 'whitesmoke' as the background color and 'dark cyan' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'whitesmoke' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark cyan', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000076", "instruction": "Please implement a fitness tracking mini-program for users to record and manage their fitness activities. The mini-program should have functionalities such as a fitness leaderboard, exercise recording, fitness diary, and a fitness statistics homepage. Users should be able to browse and record their own exercises, view the leaderboard, write a fitness diary, and track their own fitness data. Apply white to the canvas background and navy to all visible components.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "Big Data", "Data Visualization"]}, "application_type": "Personal Portfolio Sites", "ui_instruct": [{"task": "Navigate to the fitness leaderboard page.", "expected_result": "The leaderboard page displays a list of users ranked by fitness activity, and user can navigate away without issues.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Record a new exercise activity.", "expected_result": "Exercise activity is saved and visible under the user's exercise records without any discrepancies.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Write and save a new entry in the fitness diary.", "expected_result": "The new entry is saved successfully and is retrievable from the fitness diary section.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "File operation"]}}, {"task": "View personal fitness statistics on the homepage.", "expected_result": "An accurate summary of the user's recorded activities is displayed, reflecting the updated fitness stats.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'white' as the background color and 'navy' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'white' and components (such as buttons, cards, headers, etc.) are styled with the color 'navy', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000077", "instruction": "Please implement a website that provides tool information for engineers. The website should have user registration and login functionality, and be able to display information about various tools, including tool name, description, function, price, etc. Users should be able to search and filter tools, view detailed tool information, and be able to comment and rate tools. Declare ivory as the global background color and forest green for all UI pieces.", "Category": {"primary_category": "User Interaction", "subcategories": ["Authentication", "Dynamic Content Rendering", "Data Visualization"]}, "application_type": "Productivity Applications", "ui_instruct": [{"task": "Test the user registration form by creating a new account.", "expected_result": "A new user account is successfully created, and a confirmation message is displayed. The user is directed to a welcome page or dashboard.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Perform a login operation using valid credentials.", "expected_result": "The user is successfully logged in and redirected to their user dashboard, confirming their account status.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Search for a specific tool using the search functionality.", "expected_result": "The search results display relevant tools matching the search query, including tool name and basic details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Apply a filter to the tools section based on tool category.", "expected_result": "Only tools within the selected category are displayed, and all other tools are correctly excluded.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "View detailed information for a specific tool by clicking on it.", "expected_result": "The detailed page displays comprehensive information including tool name, description, function, and price.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Add a comment and rating to a tool as a logged-in user.", "expected_result": "The comment and rating are successfully submitted and appear under the tool's comments section.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows"]}}, {"task": "Verify that the website uses 'ivory' as the background color and 'forest green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ivory' and components (such as buttons, cards, headers, etc.) are styled with the color 'forest green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000078", "instruction": "Please implement a computing task website for performing calculations. The website should have functionalities for inputting mathematical expressions, executing calculations, and displaying results. Users should be able to input mathematical expressions, select the calculation type (e.g., \"Basic Arithmetic\"), execute the calculation, and view the calculation results. Use mint cream as the screen background and teal for component highlights.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}, "application_type": "Productivity Applications", "ui_instruct": [{"task": "Input a basic mathematical expression (e.g., \"2 + 2\") into the expression input field.", "expected_result": "The expression \"2 + 2\" is correctly displayed in the input field without any modification.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Select a calculation type from the available options (e.g., \"Basic Arithmetic\").", "expected_result": "The selected calculation type is visibly confirmed on the interface, ensuring the system understands the user's choice.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Click the button to execute the calculation after entering a mathematical expression and selecting a calculation type.", "expected_result": "The system processes the equation and a result is displayed on the results screen.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Input an invalid mathematical expression (e.g., \"2 ++ 2\") and attempt to execute the calculation.", "expected_result": "An error message is displayed, indicating that the expression is invalid and guiding the user to input a valid expression.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Test the website's navigation by moving from the home page to the calculation page.", "expected_result": "The transition should be smooth, and the calculation page should load without errors and allow immediate interaction.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'mint cream' as the background color and 'teal' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'mint cream' and components (such as buttons, cards, headers, etc.) are styled with the color 'teal', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000079", "instruction": "Please implement a modern diagram maker website for creating and editing diagrams. The website should have functionalities for creating new diagrams, editing existing diagrams, adding and removing diagram elements, and adjusting layout and style. Users should be able to choose from different diagram types, such as flowcharts, organizational charts, and mind maps, and use a drag-and-drop interface to add and arrange diagram elements. Select ghost white for layout background and slate gray for component details.", "Category": {"primary_category": "User Interaction", "subcategories": ["Real-time Features", "Form Systems", "AI Integration"]}, "application_type": "Productivity Applications", "ui_instruct": [{"task": "Attempt to create a new diagram using the provided interface.", "expected_result": "The system successfully creates a new blank diagram on the canvas.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Access the options to choose a diagram type and select \"Flowchart.\"", "expected_result": "The canvas updates to support the creation of a flowchart, displaying flowchart-specific tools and elements.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Use the drag-and-drop interface to add a new shape to the diagram.", "expected_result": "The shape is added to the diagram canvas at the position where it was dropped.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["Component Styling", "UI Consistency", "Responsive Behavior"]}}, {"task": "Edit an existing element within a diagram (e.g., change the text in a shape).", "expected_result": "The changes are successfully applied and displayed in real-time on the diagram.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "File operation"]}}, {"task": "Remove an element from a diagram using the provided interface tools.", "expected_result": "The element is deleted from the diagram, and the action is reflected visually on the canvas.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["Component Styling", "UI Consistency"]}}, {"task": "Rearrange elements on the canvas by dragging one element to a new position.", "expected_result": "The element moves to the new position without errors or visual glitches.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Adjust the style of an element (e.g., change the color or border).", "expected_result": "The new style settings are applied to the element and are visibly noticeable on the canvas.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Component Styling"]}}, {"task": "Navigate to the settings to change the layout of a diagram.", "expected_result": "The diagram adjusts according to the new layout preferences chosen by the user.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Verify that the website uses 'ghost white' as the background color and 'slate gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ghost white' and components (such as buttons, cards, headers, etc.) are styled with the color 'slate gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000080", "instruction": "Please implement an advanced to-do list web application where users can create, edit, and delete to-do items. The application should have functionalities for adding new tasks, marking tasks as completed, deleting tasks, filtering tasks, and searching tasks. Users should be able to browse all to-do items, create new tasks, edit existing tasks, and delete unnecessary tasks. Set all pages to have a lavender background and indigo components.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "User Interaction"]}, "application_type": "Productivity Applications", "ui_instruct": [{"task": "Create a new task by filling out the \"Add Task\" form and submitting it.", "expected_result": "The new task appears in the list of to-do items with the correct details and is visible under the user's account.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Edit an existing task by changing its description and saving the changes.", "expected_result": "The task's description is updated in the list and reflects the changes accurately.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Mark a specific task as completed on the to-do list.", "expected_result": "The task is visibly marked as completed, often indicated by a strikethrough, checkbox, or similar visual cue.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Delete a task from the list by selecting the \"Delete\" option next to it.", "expected_result": "The selected task is removed from the list and is no longer visible in the account.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Use the search functionality to find a specific task by its title or keywords.", "expected_result": "The search returns a relevant list of tasks that match the query, displaying intended search criteria clearly.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Filter tasks to show only completed or uncompleted tasks.", "expected_result": "The task list updates to display only tasks that match the selected filter criteria without affecting the unfiltered tasks' status.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Verify the site's navigation by clicking the provided menu items or links in the user interface.", "expected_result": "Each navigation element correctly redirects the user to the intended page without errors, maintaining user session details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'lavender' as the background color and 'indigo' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lavender' and components (such as buttons, cards, headers, etc.) are styled with the color 'indigo', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000081", "instruction": "Please implement a cross-platform HTML editor with live preview and code editing functionality. The editor should allow users to switch between HTML code and text editing modes and automatically convert to HTML. The editor should have project management capabilities, allowing users to organize multiple HTML documents, images, and other files. The editor should also have features such as syntax highlighting, saving template pages, and a basic user guide. Set the background color to honeydew and the component color to dark olive green.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "AI Integration", "Data Management"]}, "application_type": "Productivity Applications", "ui_instruct": [{"task": "Open the HTML editor and switch between HTML code mode and text editing mode.", "expected_result": "The editor successfully switches between HTML code mode and text editing mode, with the content accurately reflected in both modes without data loss.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Enter HTML code in the editor and view the live preview of the content.", "expected_result": "The live preview immediately updates to accurately display the rendered HTML content as it is typed, without delay or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Enable syntax highlighting within the HTML editor while editing a code file.", "expected_result": "The HTML editor displays proper syntax highlighting, with different HTML tags and attributes visibly distinct through color coding or formatting.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Component Styling"]}}, {"task": "Save the current HTML document as a template page.", "expected_result": "The editor saves the document as a template, which can be accessed later from the template section, ensuring it opens with original formatting and content intact.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Access the basic user guide from within the HTML editor interface.", "expected_result": "The editor provides access to a basic user guide, which opens correctly and provides comprehensive instructions relevant to using the editor's features.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'honeydew' as the background color and 'dark olive green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'honeydew' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark olive green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000082", "instruction": "Please implement a food distribution website for managing and distributing food. The website should have functionalities for food donation, food distribution, and volunteer management. Users should be able to browse food donation information, apply for food distribution, view volunteer information, and manage their own accounts. Use azure for the background and midnight blue for components.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Authentication", "CRUD Operations"]}, "application_type": "Project Management Tools", "ui_instruct": [{"task": "Navigate to the food donation section and view available food donations.", "expected_result": "A list of available food donations is displayed, with relevant details such as food type, quantity, and expiry date.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Submit a food distribution application form with valid details.", "expected_result": "A confirmation message is displayed, and the application is recorded in the user's account under submitted applications.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "View the volunteer information page.", "expected_result": "The page displays a list of current volunteer opportunities, including role descriptions and requirements.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Edit account information by updating the user's contact details.", "expected_result": "The account page reflects the updated contact information after saving changes.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Test the website's main navigation links by clicking on each link in the header.", "expected_result": "Each link successfully redirects the user to the correct section of the website without any dead links or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'azure' as the background color and 'midnight blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'azure' and components (such as buttons, cards, headers, etc.) are styled with the color 'midnight blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000083", "instruction": "Please implement a detective agency case management app for managing cases and tracking work hours. The app should have functionalities for real-time reporting, data collection and storage, work hours tracking, estimated expense sheet generation, and service assignment sheet. Users should be able to browse case information, submit real-time reports, log work hours, and view estimated expense sheets and service assignment sheets. Apply beige as the background; style all components with saddle brown.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "Big Data"]}, "application_type": "Project Management Tools", "ui_instruct": [{"task": "Verify that case information is displayed accurately and can be browsed.", "expected_result": "The user can navigate through different cases, and each case displays detailed and correct information as per database or test data.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Attempt to submit a real-time report on a case.", "expected_result": "The report is successfully submitted, and a confirmation message is displayed to the user. The report appears in the case's report history.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Dynamic Content Rendering"]}}, {"task": "Log work hours for a specific case.", "expected_result": "Work hours are successfully logged, and the total hours are updated in real-time in the case details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Generate an estimated expense sheet for a particular case.", "expected_result": "An estimated expense sheet is generated accurately, reflecting the required calculations and displaying all necessary details to the user.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Access the service assignment sheet and ensure it is displayed correctly.", "expected_result": "The service assignment sheet is accessible and presents all relevant information clearly associated with the selected case.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Test the navigation functionality from the case management screen back to the dashboard.", "expected_result": "The user can successfully navigate back to the main dashboard without any errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'beige' as the background color and 'saddle brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'beige' and components (such as buttons, cards, headers, etc.) are styled with the color 'saddle brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000084", "instruction": "Please implement a risk assessment website for conducting risk assessments and generating reports. The website should have functionalities for selecting risk assessment items, auto-populating data, generating charts, and creating reports. Users should be able to select risk assessment items, and the website will automatically fill in relevant data from a background database, generate charts, and create reports. The website should also have a subscription feature, allowing users to access the risk assessment tool. Define the background as alice blue and components as steel blue.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "Data Visualization", "API Integration"]}, "application_type": "Project Management Tools", "ui_instruct": [{"task": "Test risk assessment item selection.", "expected_result": "Users should be able to select risk assessment items from a list, and selected items should be clearly highlighted or checked.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Filtering"]}}, {"task": "Verify auto-population of data.", "expected_result": "When a user selects a risk assessment item, the relevant data should automatically populate from the background database without errors or delays.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Test chart generation.", "expected_result": "After selecting risk assessment items, the website should generate accurate charts reflecting the selected data, which should be visible and correctly labeled.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization"]}}, {"task": "Test report creation functionality.", "expected_result": "Users should be able to generate a downloadable report that accurately includes the selected risk assessment items, populated data, and generated charts.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Check the subscription feature.", "expected_result": "Users should be able to successfully subscribe, ensuring their access to the risk assessment tool is granted immediately upon subscription.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Authentication Flows"]}}, {"task": "Test navigation between pages.", "expected_result": "Users should be able to seamlessly navigate through various pages such as login, dashboard, and reporting without encountering broken links or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'alice blue' as the background color and 'steel blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'alice blue' and components (such as buttons, cards, headers, etc.) are styled with the color 'steel blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000085", "instruction": "Please develop a construction management website for managing projects and documents. The website should have functionalities for document management, project scheduling, communication tools, estimating job costing, time tracking, and resource management. Users should be able to create and manage projects, schedule project timelines, communicate with team members, estimate project costs, track project progress, and manage resources. Assign light gray to the background and dark red to the UI elements.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "Big Data"]}, "application_type": "Project Management Tools", "ui_instruct": [{"task": "Navigate to the project scheduling feature and create a new project timeline.", "expected_result": "The new project timeline is saved correctly, and all scheduled tasks appear on the project calendar.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Form Operations"]}}, {"task": "Use the communication tool to send a message to a team member.", "expected_result": "The message is sent and appears in the recipient's communication inbox with a correct timestamp.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Input estimated project costs using the estimating feature.", "expected_result": "The cost estimate is calculated and displayed correctly in the project's financial overview section.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Track time spent on a particular project using the time tracking tool.", "expected_result": "Logged time is recorded accurately in the project's timesheet and accessible for review.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Access and manage resources in the resource management section.", "expected_result": "Resource allocation is correctly updated and reflected in resource availability charts.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation", "Generation", "E-commerce"]}}, {"task": "Validate project progress tracking feature by marking a task as complete.", "expected_result": "The completed task is updated in the project progress view, and overall project progress percentage reflects the change.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Verify that the website uses 'light gray' as the background color and 'dark red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light gray' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000086", "instruction": "Please implement a medical journal website for publishing medical articles and information. The website should have a user-friendly interface and responsive design, making it easy for users to browse and find information. The website should include a search function, allowing users to quickly find relevant articles and information, open articals, and download artical PDFs. Users can manage account by updating profile information within the author's account. Configure the background color to seashell, with components using crimson.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Dynamic Content Rendering", "Data Visualization"]}, "application_type": "Publishing/Blogging Platforms", "ui_instruct": [{"task": "Test the functionality of the search bar by searching for a specific medical term.", "expected_result": "The search returns relevant articles containing the medical term, and the results list matches the number and content expected based on available articles.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Navigate through the website's main sections using the top navigation menu.", "expected_result": "All links in the navigation menu function correctly and lead to the appropriate pages, confirming intuitive navigation.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test the account management functionality by attempting to update profile information within an author's account.", "expected_result": "Changes to profile information save successfully, and updated information is reflected upon the next visit to the account settings.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Validate the accessibility of the website using an online accessibility checker tool.", "expected_result": "The tool reports compliance with standard accessibility guidelines (e.g., WCAG 2.1) without major issues.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Responsive Behavior"]}}, {"task": "Open an article page and verify the download link for article PDFs.", "expected_result": "Clicking the download link initiates a successful download of the PDF, and the file is complete and readable.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Verify that the website uses 'seashell' as the background color and 'crimson' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'seashell' and components (such as buttons, cards, headers, etc.) are styled with the color 'crimson', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000087", "instruction": "Please implement an entertainment directory website to display band information and advertisements. The website should have band registration and login functionality, allowing band members to input their bio, provide picture links and audio sample links, and provide direct links to YouTube videos. Additionally, the website should allow advertisers to register, log in, and upload their ad content. Users should be able to browse band information, listen to audio samples, watch videos, and view advertisements. Implement floral white for the page background and dark goldenrod for the elements.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Media Display", "User Interaction"]}, "application_type": "Publishing/Blogging Platforms", "ui_instruct": [{"task": "Verify band registration form functionality.", "expected_result": "The form successfully captures all required fields, including band name, bio, and contact information. Submission leads to a confirmation message without any errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Test band login functionality.", "expected_result": "Using valid credentials allows band members access to their dashboard without error messages. Invalid credentials provide an appropriate error message.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Check the ability for band members to provide a profile picture link.", "expected_result": "The picture upload functionality accepts image files and displays the uploaded image in the band's profile without errors or distortions.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Validate the upload of audio sample links by band members.", "expected_result": "Audio files are uploaded successfully, the files can be played from the band's profile page, and playback is smooth without errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Confirm functionality for band members to add YouTube video links.", "expected_result": "Added YouTube links appear correctly in the band's profile, and videos play within the website without navigating away.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "File operation"]}}, {"task": "Assess the registration form functionality for advertisers.", "expected_result": "The form captures all the necessary information without errors, and submission results in a success confirmation message.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows"]}}, {"task": "Evaluate login functionality for advertisers.", "expected_result": "Using valid credentials allows advertisers to log in and access their dashboard successfully. Invalid credentials result in an appropriate error message.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Verify that the website uses 'floral white' as the background color and 'dark goldenrod' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'floral white' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark goldenrod', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000088", "instruction": "Please implement a species biological information database website for displaying and managing biological information data. The website should have functionalities for browsing, searching, and filtering. Users should be able to browse biological information data for different species, search for specific data, and filter data based on different criteria. Specify linen as the base color and maroon for all components.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "Big Data"]}, "application_type": "Publishing/Blogging Platforms", "ui_instruct": [{"task": "Browse the database for available biological information of different species.", "expected_result": "The user should be able to view a list of species with corresponding biological information without any missing data or display errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Data Display Testing"]}}, {"task": "Perform a search for a specific species using the search functionality.", "expected_result": "The search results should display only the species that match the search criteria, demonstrating accuracy and relevance without results from unrelated species.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Apply a filter to the data based on a given criterion (e.g., habitat type).", "expected_result": "The data should update to show only those entries that meet the filter criteria, without displaying entries that do not match.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Verify that the website uses 'linen' as the background color and 'maroon' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'linen' and components (such as buttons, cards, headers, etc.) are styled with the color 'maroon', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000089", "instruction": "Please implement a startup article publishing mini-program to display entrepreneurial experiences and stories. The mini-program should have functions for browsing articles, searching, collecting, and sharing. Users should be able to browse articles in different categories, search for articles of interest, collect favorite articles, and share articles on other platforms. The mini-program should also have user registration and login functions, allowing users to manage their collections and reading history. Style the layout with old lace in the background and rosy brown for the interface.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Dynamic Content Rendering", "User Interaction"]}, "application_type": "Publishing/Blogging Platforms", "ui_instruct": [{"task": "Verify Article Browsing", "expected_result": "Users can successfully browse articles under different categories. Selecting a category should display a list of relevant articles without errors or missing content.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Test Search Functionality", "expected_result": "When a user enters a query into the search bar and submits it, the system should display a list of articles that match the search criteria, reflecting accurate and relevant results based on the query.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Check Article Collection Feature", "expected_result": "Users should be able to click a \"collect\" button on an article, which will then be added to their collection. The collected articles should be accessible from a dedicated section, accurately displaying all saved articles.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "File operation"]}}, {"task": "Validate Article Sharing Capability", "expected_result": "Users should be able to share articles to other platforms via a functional share button. Upon clicking, options for sharing (e.g., social media, email) should be displayed, and the selected method should successfully transmit the article link.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Assess User Registration Process", "expected_result": "New users should be able to register by providing necessary information (e.g., username, email, password). The registration process should complete without errors, and users should receive confirmation of successful registration.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Test User Login Functionality", "expected_result": "Existing users should be able to log in using their credentials. Upon successful login, users should be directed to their personalized homepage, where they can access their collections and reading history.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Validate Reading History Tracking", "expected_result": "As users read articles, these articles should appear in their reading history section. The history should update automatically and display a correct and chronological list of previously read articles.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Examine Navigation to Different Sections", "expected_result": "Users should be able to navigate smoothly between sections (e.g., categories, search, collections, profile) via a navigation menu. The transition between sections should be seamless, with minimal loading time and no broken links.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'old lace' as the background color and 'rosy brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'old lace' and components (such as buttons, cards, headers, etc.) are styled with the color 'rosy brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000090", "instruction": "Please implement a social website for user registration, making friends, and sharing. The website should have a registration function, allowing users to create an account and log in. Users should be able to invite friends to join the website and vote on content. Users should be able to upload pictures and earn points. The website should have a personal homepage that displays user information and updates. Use light cyan as the default background and cadet blue for component styling.", "Category": {"primary_category": "User Interaction", "subcategories": ["Authentication", "Form Systems", "E-commerce"]}, "application_type": "Social Media Platforms", "ui_instruct": [{"task": "Attempt to register a new user with valid details using the registration form.", "expected_result": "The user account is successfully created, and a confirmation message is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Log in with the newly registered user's credentials.", "expected_result": "The user is redirected to their personal homepage, which welcomes them by name.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Navigate to the user profile section and verify the display of user information, including profile picture, name, and any recent updates.", "expected_result": "User's profile picture, name, and updates are accurately displayed on their personal homepage.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Invite a friend to join the website by sending an invitation via a provided function.", "expected_result": "A confirmation message is displayed, indicating that the invitation was successfully sent.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Upload a picture as the logged-in user and check for successful upload indication.", "expected_result": "The picture appears in the user's profile or designated upload area with a confirmation of successful upload.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Vote on a piece of content (e.g., picture) on the website.", "expected_result": "The vote is registered, and the total votes count updates to reflect the user’s action.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Check the user points system by performing an action that earns points (e.g., logging in, uploading content) and verifying the points update.", "expected_result": "The user’s points tally increases appropriately based on the action performed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "File operation", "Generation"]}}, {"task": "Validate navigation consistency by visiting different major sections of the website (e.g., Home, Profile, Friends, Uploads) using navigation menus.", "expected_result": "Navigation links lead to the correct sections, and pages load without errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'light cyan' as the background color and 'cadet blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light cyan' and components (such as buttons, cards, headers, etc.) are styled with the color 'cadet blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000091", "instruction": "Please implement a smart matrimonial website for users to find partners. The website should have user registration and login functionality, allowing users to create profiles, including uploading photos and filling out personal information. The website should have advanced search and filtering options, enabling users to find suitable partners based on different criteria. The website should also have messaging and chat functionality, allowing users to communicate with each other. Design the site using lemon chiffon as the background and chocolate for content blocks.", "Category": {"primary_category": "User Interaction", "subcategories": ["Authentication", "Form Systems", "Real-time Features"]}, "application_type": "Social Media Platforms", "ui_instruct": [{"task": "Test the user registration form for creating a new account.", "expected_result": "The form should accept valid inputs, and submit successfully, creating a new user account. An error message should appear for invalid inputs.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Verify the login functionality with valid credentials.", "expected_result": "The user should successfully log in and be redirected to their dashboard or homepage.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Check the advanced search feature for looking up potential partners based on specific criteria (e.g., age, location, interests).", "expected_result": "The search results should accurately reflect users that meet the specified criteria.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Validate the chat functionality by initiating a private chat between two users.", "expected_result": "Messages should be sent and received in real-time without errors and the chat should remain private.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Test the logout process to ensure users can safely exit their accounts.", "expected_result": "The user should be logged out immediately and redirected to the homepage or login page.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Verify that error messages and prompts provide clear, user-friendly instructions when users perform invalid login actions (e.g., incorrect password).", "expected_result": "Error messages should clearly explain the issue and provide guidance for resolution without technical jargon.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Verify that the website uses 'lemon chiffon' as the background color and 'chocolate' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lemon chiffon' and components (such as buttons, cards, headers, etc.) are styled with the color 'chocolate', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000092", "instruction": "Please implement a skill sharing platform for showcasing personal skills and connecting with others. The platform should allow users to create profiles, add skills and certifications, and search for other users based on their qualifications. Users should be able to browse other users' profiles, view their skills and certifications, and contact them. The platform should also have a search feature that allows users to find other users based on their skills and certifications. Apply cornsilk for the layout background and peru for interactive elements.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Authentication", "AI Integration"]}, "application_type": "Social Media Platforms", "ui_instruct": [{"task": "Verify that a user can create a profile and add skills and certifications.", "expected_result": "The user should be able to input and save information regarding their skills and certifications, and this information should be accurately displayed on their profile page.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows", "Form Operations"]}}, {"task": "Test the search feature by searching for a user based on a specific skill.", "expected_result": "The search results should display a list of users who have the specified skill in their profiles.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Confirm that a user can view another user's profile, including their skills and certifications.", "expected_result": "The user should be able to navigate to another user's profile and see the detailed list of their skills and certifications.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Check the contact functionality by trying to contact another user from their profile page.", "expected_result": "The platform should provide an option to contact the user, such as sending a message or an integrated contact form, and it should function correctly.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Test the navigation system, ensuring users can easily move between pages such as home, profile, search, and any other main sections.", "expected_result": "All navigation links should be functional and lead to their respective pages without errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'cornsilk' as the background color and 'peru' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'cornsilk' and components (such as buttons, cards, headers, etc.) are styled with the color 'peru', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000093", "instruction": "Please implement a website called \"World of Imagination\" to showcase and inspire users' imagination. The website should have functionalities for showcasing user-created content, sharing ideas, discussing, and interacting. Users should be able to browse others' creative works, share their own ideas via the share ideas form, participate in discussions, and interact with other users. Choose azure mist for the background; set all component colors to dark slate blue.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Real-time Features", "AI Integration"]}, "application_type": "Social Media Platforms", "ui_instruct": [{"task": "Browse the creative works section.", "expected_result": "The creative works section loads correctly, displaying a list of user-created content with images and descriptions that are relevant to inspiring imagination.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Submit a new idea via the share ideas form.", "expected_result": "The form submits successfully, the new idea appears in the shared ideas section, and a confirmation message is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Participate in a discussion by posting a comment.", "expected_result": "The comment is visible under the appropriate discussion topic, with the correct username and timestamp noted.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Navigate through the main pages (Home, Creative Works, Share Ideas, Discussions, Interactions) using the website's navigation menu.", "expected_result": "Each page loads correctly without layout issues, ensuring intuitive navigation and seamless transitions.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Interact with another user by sending a message.", "expected_result": "The message is delivered successfully, with a notification displayed to the recipient indicating a new message has been received.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Verify that the website uses 'azure mist' as the background color and 'dark slate blue' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'azure mist' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark slate blue', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000094", "instruction": "Please implement an animal spotter website that recognizes wild animals and sends SMS alerts. The website should have the functionality to identify different types of wild animals, and assign different color codes to each animal. Users should be able to set alert conditions, and when a specific animal is detected, the system will automatically send an SMS alert. Users should be able to browse detection records, view animal information, and set personalized alerts. Set misty rose as the body background and use firebrick for the UI.", "Category": {"primary_category": "User Interaction", "subcategories": ["AI Integration", "Real-time Features", "E-commerce"]}, "application_type": "Streaming and Interactive Platforms", "ui_instruct": [{"task": "Verify SMS alert functionality by setting an alert condition for a specific animal.", "expected_result": "When the specified animal is detected in a video stream, the user receives an SMS alert with correct information, confirming alert delivery functionality.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication"]}}, {"task": "Assign and verify a color code for an identified animal in the video analysis.", "expected_result": "The animal is highlighted with the designated color code both in the UI and in any corresponding records, ensuring visual differentiation as per prompt requirements.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Component Styling"]}}, {"task": "Browse the detection records page.", "expected_result": "The user is able to view the complete detection history, including timestamps, identified animal names, and corresponding color codes, with relevant information accurately displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "View detailed information for a specific animal from the records.", "expected_result": "The user can click on an animal entry and view a page or pop-up with detailed information about the species, aligning with the prompt's goal of informative content.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Set and modify personalized animal alert criteria from the user settings.", "expected_result": "The user can successfully set new alert conditions for specific animals and edit existing settings; changes are saved and reflected in the system immediately.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "User Settings"]}}, {"task": "Verify that the website uses 'misty rose' as the background color and 'firebrick' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'misty rose' and components (such as buttons, cards, headers, etc.) are styled with the color 'firebrick', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000095", "instruction": "Please implement a website for downloading ringtones and wallpapers, providing services for downloading ringtones and wallpapers. The website should have the functionality to download ringtones and wallpapers, allowing users to browse and search for ringtones and wallpapers, select and download the desired content, navigate to the user profile to view the download history, add ringtones to the collection for future reference, and categorize the contents by selecting a category from the menu. The website should also have categorization and search functions to help users quickly find the ringtones and wallpapers they need. Style all pages with a light goldenrod background and olive drab components.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "E-commerce", "Data Management"]}, "application_type": "Streaming and Interactive Platforms", "ui_instruct": [{"task": "Use the search function to find a specific ringtone using a keyword.", "expected_result": "The search results should populate a list of ringtones that match the keyword, showing relevant details such as title and category.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Browse a category of wallpapers and attempt to download one.", "expected_result": "The download should initiate immediately after selecting \"Download,\" and the user should receive a confirmation message.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Navigate to the user profile section to view the download history.", "expected_result": "The download history should list all previously downloaded ringtones and wallpapers, including dates and times.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "File operation"]}}, {"task": "Add a ringtone to the collection for future reference without downloading it.", "expected_result": "The ringtone should appear in the user's collection section, accessible through their profile.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation", "Generation"]}}, {"task": "Test the categorization feature by selecting a category from the menu.", "expected_result": "The page should display all ringtones and wallpapers accurately categorized, offering relevant options for easy navigation.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Verify that the website uses 'light goldenrod' as the background color and 'olive drab' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light goldenrod' and components (such as buttons, cards, headers, etc.) are styled with the color 'olive drab', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000096", "instruction": "Please implement an online travel booking website for booking train tickets, air tickets, and hotels. The website should have functionalities for searching, booking, payment, and order management. Users should be able to search and book train tickets, air tickets, and hotels, make online payments, and view order status. Use peach puff in the background layer and indian red for the component layer.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "API Integration", "CRUD Operations"]}, "application_type": "Travel Booking Portals", "ui_instruct": [{"task": "Search for a train ticket using specified departure and arrival cities and dates.", "expected_result": "A list of available train options matching the search criteria is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "E-commerce"]}}, {"task": "Book a selected air ticket from the search results.", "expected_result": "User is able to successfully complete the booking process and receive a confirmation number.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Searching", "Form Operations"]}}, {"task": "Initiate an online payment for a hotel booking using a valid credit card.", "expected_result": "The payment is processed, the transaction is confirmed, and an email receipt is generated.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Payment", "E-commerce"]}}, {"task": "Navigate to the 'Order Status' page.", "expected_result": "A list of all past and current bookings is displayed with their corresponding statuses.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'peach puff' as the background color and 'indian red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'peach puff' and components (such as buttons, cards, headers, etc.) are styled with the color 'indian red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000097", "instruction": "Please implement a travel and camping website and web app for Europe, showcasing tourist attractions and campsites across the continent. The website should have functionalities for searching, booking, and reviewing. Users should be able to browse tourist attractions and campsites in different countries and cities, book attractions and campsites of interest, and review the attractions and campsites they have visited. Establish light pink as the main background and medium violet red for the controls.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Form Systems", "Data Visualization"]}, "application_type": "Travel Booking Portals", "ui_instruct": [{"task": "Search for tourist attractions in Paris, France, using the search functionality.", "expected_result": "A list of relevant tourist attractions in Paris is displayed, and each attraction includes essential details like name, location, and a brief description.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Book a campsite in Tuscany, Italy, ensuring the booking process is completed.", "expected_result": "The campsite is successfully booked, and a confirmation message or page with booking details, such as date and location, is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations", "Payment"]}}, {"task": "Submit a review for a recently visited campsite in Bavaria, Germany.", "expected_result": "The review is successfully submitted and appears publicly under the campsite's reviews section, along with any ratings assigned.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication", "Form Operations"]}}, {"task": "Navigate through different country sections to browse available campsites and tourist attractions.", "expected_result": "The user can seamlessly navigate from one country section to another without errors, and relevant attractions and campsites for each country are displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Use the website to book a tourist attraction and verify that the booking form captures required details (e.g., name, date, time).", "expected_result": "The booking form functions correctly, all necessary fields are required, and upon submission, a confirmation page appears with booking details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Verify that the website uses 'light pink' as the background color and 'medium violet red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light pink' and components (such as buttons, cards, headers, etc.) are styled with the color 'medium violet red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000098", "instruction": "Please implement a comprehensive car rental platform for booking car rental services. The platform should have a user-friendly interface, allowing users to easily browse and book car rental services. Users should be able to browse different types of cars, select rental dates and times, book selected cars, and view booking records. The platform should support multiple payment methods and provide order management functionality. Set the background to papaya whip, and apply dark orange to components.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Form Systems", "Data Management"]}, "application_type": "Travel Booking Portals", "ui_instruct": [{"task": "Browse the available cars for rental.", "expected_result": "The list of available cars, along with their details (e.g., type, price per day), is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Filtering"]}}, {"task": "Select a car and specify rental start and end dates.", "expected_result": "The system highlights whether the selected car is available for the chosen dates.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Navigate to the car booking confirmation page after selecting a car and rental dates.", "expected_result": "The booking summary (car type, rental dates, total cost) is accurately displayed, with options to proceed to payment or edit details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Attempt to complete a booking using one of the available payment methods.", "expected_result": "Payment is processed successfully, and a booking confirmation screen is shown with a unique booking reference.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Payment", "E-commerce"]}}, {"task": "Verify that the website uses 'papaya whip' as the background color and 'dark orange' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'papaya whip' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark orange', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000099", "instruction": "Please implement a minimalistic bus and railway ticket booking platform where users can search and book bus and railway tickets, view real-time seat availability and prices, make secure payments, and receive booking confirmations via email or SMS. The platform should have user account management features, including user registration, login, booking history, and ticket printing options. Additionally, the platform should have a responsive design that adapts to both mobile and desktop devices. Configure all backgrounds with snow and all components with dim gray.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Authentication", "Real-time Features"]}, "application_type": "Travel Booking Portals", "ui_instruct": [{"task": "Test the user registration form functionality.", "expected_result": "The form successfully registers a new user, and a confirmation message is displayed indicating successful registration.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Authentication Flows"]}}, {"task": "Verify the login feature.", "expected_result": "Users can log in using registered credentials, gaining access to personal account features such as booking history.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Search for a bus ticket and check seat availability.", "expected_result": "The platform displays available bus options, along with real-time seat availability and pricing information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Searching"]}}, {"task": "Search for a railway ticket and check seat availability.", "expected_result": "The platform displays available railway options, along with real-time seat availability and pricing information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Searching"]}}, {"task": "Test the booking payment process.", "expected_result": "Payments are processed securely, with confirmation of payment completion displayed, and users receive a booking confirmation via email or SMS.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Payment", "E-commerce"]}}, {"task": "Test the booking history feature.", "expected_result": "Users can view a list of their past bookings with details of each transaction after successful login.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Details Information"]}}, {"task": "Verify the ticket printing option.", "expected_result": "Users are able to print their tickets directly from the platform in a print-friendly format.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation"]}}, {"task": "Verify that the website uses 'snow' as the background color and 'dim gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'snow' and components (such as buttons, cards, headers, etc.) are styled with the color 'dim gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000100", "instruction": "Please implement a golf travel package booking website that sells golf travel packages. The website should have functionalities for customer request handling, booking confirmation, online quotes, customer relationship management, and supplier management. Users can initiate requests through the website homepage form submission, and the system will collect information based on customer preferences and dynamically apply hotel, flight, transport, and golf conditions. Customers can confirm bookings online, and the system will generate digital vouchers and invoices. Assign whitesmoke to body backgrounds and dark cyan to main components.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Form Systems", "CRUD Operations"]}, "application_type": "Travel Booking Portals", "ui_instruct": [{"task": "Check the functionality of the initial request form submission on the homepage.", "expected_result": "The form should successfully accept user inputs such as travel dates, destination, and golfing preferences and trigger a confirmation message or prompt upon submission.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Verify the ability to book a travel package through the website.", "expected_result": "Users should be able to navigate through the booking process, select a travel package, and receive a clear confirmation message on successful booking.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Test the online quote generation feature for a selected travel package.", "expected_result": "The website should dynamically generate an accurate and detailed quote based on user preferences, including hotel, flight, transport, and golf conditions.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "E-commerce"]}}, {"task": "Validate the content and accuracy of the digital voucher generated after booking confirmation.", "expected_result": "The digital voucher should include specific travel package details, booking confirmation number, and customer information accurately corresponding to the mock booking data submitted.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "E-commerce"]}}, {"task": "Evaluate the responsiveness of the website's navigation menu.", "expected_result": "The navigation menu should function smoothly and resize or adapt appropriately across different devices (desktop, tablet, smartphone) without layout issues or hidden options.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["Responsive Behavior"]}}, {"task": "Test the supplier management interface for adding or updating a golf package supplier.", "expected_result": "The user should be able to successfully add or update supplier details with confirmation that changes have been saved in the system.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Test the customer relationship management (CRM) feature by updating customer preferences.", "expected_result": "Customer information should be correctly updated within the CRM, and any changes should reflect immediately where relevant (e.g., personalized suggestions or quotes).", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Verify that the website uses 'whitesmoke' as the background color and 'dark cyan' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'whitesmoke' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark cyan', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000101", "instruction": "Please implement a travel reimbursement and payment system for employee travel expenses. The system should have functionalities for booking tickets, hotels, and trains, generating settlements, submitting reimbursement applications, and more. Users should be able to book tickets, hotels, and trains, generate settlements report, submit reimbursement applications, and view reimbursement status. Use white for container backgrounds and navy for component visuals.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "File Handling"]}, "application_type": "Travel Booking Portals", "ui_instruct": [{"task": "Navigate to the ticket booking section and book a flight ticket.", "expected_result": "The ticket booking form submits successfully, and a confirmation message or booking summary is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Navigate to the hotel booking section and attempt to book a hotel room.", "expected_result": "The hotel booking form submits successfully, and a confirmation message or booking summary is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Go to the train booking section and book a train ticket.", "expected_result": "The train booking form submits successfully, and a confirmation message or booking summary is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce"]}}, {"task": "Access the reimbursement application section and submit a new reimbursement request.", "expected_result": "The reimbursement application form submits successfully, and a confirmation notification or reference number is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Generate a settlement report for recent travel expenses.", "expected_result": "The system generates a settlement report and displays it correctly on the screen or provides an option to download it.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Navigate to the reimbursement status page to view the status of a submitted reimbursement request.", "expected_result": "The user can view the status of their submitted reimbursement application, with accurate and up-to-date information displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Verify that the website uses 'white' as the background color and 'navy' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'white' and components (such as buttons, cards, headers, etc.) are styled with the color 'navy', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
